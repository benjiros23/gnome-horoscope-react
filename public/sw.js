// public/sw.js - Service Worker –¥–ª—è –ì–Ω–æ–º—å–µ–≥–æ –ì–æ—Ä–æ—Å–∫–æ–ø–∞
const CACHE_NAME = 'gnome-horoscope-v2.1.0';
const OFFLINE_URL = '/offline.html';

// –†–µ—Å—É—Ä—Å—ã –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
const CACHE_RESOURCES = [
  '/',
  '/static/js/bundle.js',
  '/static/css/main.css',
  '/manifest.json',
  OFFLINE_URL
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', (event) => {
  console.log('üîß Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞...');
  
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('üì¶ Service Worker: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤...');
        return cache.addAll(CACHE_RESOURCES);
      })
      .then(() => {
        console.log('‚úÖ Service Worker: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        return self.skipWaiting();
      })
  );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', (event) => {
  console.log('‚úÖ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è...');
  
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (cacheName !== CACHE_NAME) {
            console.log('üóëÔ∏è Service Worker: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–µ—à:', cacheName);
            return caches.delete(cacheName);
          }
        })
      );
    }).then(() => {
      console.log('‚úÖ Service Worker: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
      return self.clients.claim();
    })
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', (event) => {
  // –°—Ç—Ä–∞—Ç–µ–≥–∏—è: —Å–Ω–∞—á–∞–ª–∞ —Å–µ—Ç—å, –ø–æ—Ç–æ–º –∫–µ—à
  event.respondWith(
    fetch(event.request)
      .then((response) => {
        // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, –∫–µ—à–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if (response.ok) {
          const responseClone = response.clone();
          caches.open(CACHE_NAME).then((cache) => {
            cache.put(event.request, responseClone);
          });
        }
        return response;
      })
      .catch(() => {
        // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ –∫–µ—à–µ
        return caches.match(event.request)
          .then((cachedResponse) => {
            if (cachedResponse) {
              return cachedResponse;
            }
            
            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º offline —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (event.request.mode === 'navigate') {
              return caches.match(OFFLINE_URL);
            }
            
            // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ñ—Ñ–ª–∞–π–Ω', {
              status: 404,
              statusText: 'Not Found'
            });
          });
      })
  );
});
