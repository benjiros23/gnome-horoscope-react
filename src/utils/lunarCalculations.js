// src/utils/lunarCalculations.js - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ª—É–Ω–Ω—ã—Ö —Ñ–∞–∑
export class LunarCalculator {
  // –†–∞—Å—á–µ—Ç —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã –ª—É–Ω—ã
  static getCurrentMoonPhase() {
    const now = new Date();
    const year = now.getFullYear();
    const month = now.getMonth() + 1;
    const day = now.getDate();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ª—É–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
    const lunarAge = this.calculateLunarAge(year, month, day);
    
    return {
      phase: this.getPhaseFromAge(lunarAge),
      age: lunarAge,
      illumination: this.getIllumination(lunarAge),
      phaseName: this.getPhaseName(lunarAge),
      emoji: this.getPhaseEmoji(lunarAge),
      description: this.getPhaseDescription(lunarAge)
    };
  }

  // –†–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –ª—É–Ω—ã –≤ –¥–Ω—è—Ö
  static calculateLunarAge(year, month, day) {
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    const LUNAR_CYCLE = 29.53058868; // –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –ª—É–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    const KNOWN_NEW_MOON = new Date(2000, 0, 6, 18, 14); // –ò–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–æ–≤–æ–ª—É–Ω–∏–µ
    
    const currentDate = new Date(year, month - 1, day);
    const timeDiff = currentDate.getTime() - KNOWN_NEW_MOON.getTime();
    const daysDiff = timeDiff / (1000 * 60 * 60 * 24);
    
    const cycles = daysDiff / LUNAR_CYCLE;
    const age = (cycles - Math.floor(cycles)) * LUNAR_CYCLE;
    
    return Math.round(age * 100) / 100;
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∞–∑—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
  static getPhaseFromAge(age) {
    if (age < 1.84566) return 'new';
    if (age < 5.53699) return 'waxing-crescent';
    if (age < 9.22831) return 'first-quarter';
    if (age < 12.91963) return 'waxing-gibbous';
    if (age < 16.61096) return 'full';
    if (age < 20.30228) return 'waning-gibbous';
    if (age < 23.99361) return 'last-quarter';
    if (age < 27.68493) return 'waning-crescent';
    return 'new';
  }

  // –†–∞—Å—á–µ—Ç –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
  static getIllumination(age) {
    const illumination = 50 * (1 - Math.cos((age / 29.53058868) * 2 * Math.PI));
    return Math.round(illumination);
  }

  // –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∑—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º
  static getPhaseName(age) {
    const phase = this.getPhaseFromAge(age);
    const names = {
      'new': '–ù–æ–≤–æ–ª—É–Ω–∏–µ',
      'waxing-crescent': '–†–∞—Å—Ç—É—â–∏–π —Å–µ—Ä–ø',
      'first-quarter': '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å',
      'waxing-gibbous': '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞',
      'full': '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ',
      'waning-gibbous': '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞',
      'last-quarter': '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å',
      'waning-crescent': '–£–±—ã–≤–∞—é—â–∏–π —Å–µ—Ä–ø'
    };
    return names[phase] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ–∞–∑–∞';
  }

  // –≠–º–æ–¥–∑–∏ –¥–ª—è —Ñ–∞–∑—ã
  static getPhaseEmoji(age) {
    const phase = this.getPhaseFromAge(age);
    const emojis = {
      'new': 'üåë',
      'waxing-crescent': 'üåí',
      'first-quarter': 'üåì',
      'waxing-gibbous': 'üåî',
      'full': 'üåï',
      'waning-gibbous': 'üåñ',
      'last-quarter': 'üåó',
      'waning-crescent': 'üåò'
    };
    return emojis[phase] || 'üåô';
  }

  // –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–∑—ã –∏ –µ—ë –≤–ª–∏—è–Ω–∏—è
  static getPhaseDescription(age) {
    const phase = this.getPhaseFromAge(age);
    const descriptions = {
      'new': '–í—Ä–µ–º—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –≠–Ω–µ—Ä–≥–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.',
      'waxing-crescent': '–ü–µ—Ä–∏–æ–¥ —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è. –•–æ—Ä–æ—à–æ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–æ–≤.',
      'first-quarter': '–í—Ä–µ–º—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –∏ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.',
      'waxing-gibbous': '–ü–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª. –í—ã—Å–æ–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è.',
      'full': '–ü–∏–∫ –ª—É–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏. –í—Ä–µ–º—è —ç–º–æ—Ü–∏–π –∏ –∏–Ω—Ç—É–∏—Ü–∏–∏.',
      'waning-gibbous': '–ü–µ—Ä–∏–æ–¥ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∏ –¥–µ–ª–µ–Ω–∏–∏. –í—Ä–µ–º—è –æ—Ç–¥–∞–≤–∞—Ç—å.',
      'last-quarter': '–í—Ä–µ–º—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –ª–∏—à–Ω–µ–≥–æ –∏ –ø—Ä–æ—â–µ–Ω–∏—è.',
      'waning-crescent': '–ü–µ—Ä–∏–æ–¥ –æ—Ç–¥—ã—Ö–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –Ω–æ–≤–æ–º—É —Ü–∏–∫–ª—É.'
    };
    return descriptions[phase] || '–í—Ä–µ–º—è —Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏.';
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã
  static getMoonRecommendations(age) {
    const phase = this.getPhaseFromAge(age);
    const recommendations = {
      'new': {
        good: ['–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ú–µ–¥–∏—Ç–∞—Ü–∏—è', '–ù–∞—á–∞–ª–æ –¥–∏–µ—Ç—ã', '–ü–æ—Å–∞–¥–∫–∞ —Å–µ–º—è–Ω'],
        avoid: ['–í–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–°—Ç—Ä–∏–∂–∫–∞ –≤–æ–ª–æ—Å'],
        energy: '–≠–Ω–µ—Ä–≥–∏—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π'
      },
      'waxing-crescent': {
        good: ['–û–±—É—á–µ–Ω–∏–µ', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞', '–ù–∞—á–∞–ª–æ –ø—Ä–æ–µ–∫—Ç–æ–≤'],
        avoid: ['–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', '–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã'],
        energy: '–†–∞—Å—Ç—É—â–∞—è —Å–æ–∑–∏–¥–∞—Ç–µ–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è'
      },
      'first-quarter': {
        good: ['–†–µ—à–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', '–°–ø–æ—Ä—Ç', '–ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
        avoid: ['–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–†–∏—Å–∫–∏'],
        energy: '–≠–Ω–µ—Ä–≥–∏—è –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ä–µ—à–µ–Ω–∏–π'
      },
      'waxing-gibbous': {
        good: ['–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–µ–ª', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'],
        avoid: ['–ù–∞—á–∞–ª–æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤', '–ö–∞—Ä–¥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è'],
        energy: '–ü–∏–∫–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è'
      },
      'full': {
        good: ['–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏', '–†–æ–º–∞–Ω—Ç–∏–∫–∞', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–°–±–æ—Ä —É—Ä–æ–∂–∞—è'],
        avoid: ['–í–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã', '–û–ø–µ—Ä–∞—Ü–∏–∏', '–ê–≥—Ä–µ—Å—Å–∏—è'],
        energy: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ª—É–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è'
      },
      'waning-gibbous': {
        good: ['–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å', '–ü–æ–º–æ—â—å –¥—Ä—É–≥–∏–º', '–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'],
        avoid: ['–ù–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'],
        energy: '–≠–Ω–µ—Ä–≥–∏—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∏ —â–µ–¥—Ä–æ—Å—Ç–∏'
      },
      'last-quarter': {
        good: ['–û—á–∏—â–µ–Ω–∏–µ', '–ü—Ä–æ—â–µ–Ω–∏–µ', '–ò–∑–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç –ª–∏—à–Ω–µ–≥–æ'],
        avoid: ['–ù–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏', '–í–∞–∂–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏'],
        energy: '–≠–Ω–µ—Ä–≥–∏—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è'
      },
      'waning-crescent': {
        good: ['–û—Ç–¥—ã—Ö', '–†–µ—Ñ–ª–µ–∫—Å–∏—è', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–ª–∞–Ω–æ–≤'],
        avoid: ['–ê–∫—Ç–∏–≤–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–í–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è'],
        energy: '–≠–Ω–µ—Ä–≥–∏—è –ø–æ–∫–æ—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
      }
    };
    return recommendations[phase] || recommendations['new'];
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ª—É–Ω–Ω—ã—Ö —Ñ–∞–∑ –Ω–∞ –º–µ—Å—è—Ü
  static getMonthlyLunarCalendar(year, month) {
    const calendar = [];
    const daysInMonth = new Date(year, month, 0).getDate();
    
    for (let day = 1; day <= daysInMonth; day++) {
      const lunarAge = this.calculateLunarAge(year, month, day);
      const date = new Date(year, month - 1, day);
      
      calendar.push({
        date: date,
        day: day,
        lunarAge: lunarAge,
        phase: this.getPhaseFromAge(lunarAge),
        phaseName: this.getPhaseName(lunarAge),
        emoji: this.getPhaseEmoji(lunarAge),
        illumination: this.getIllumination(lunarAge),
        recommendations: this.getMoonRecommendations(lunarAge),
        isToday: this.isToday(date)
      });
    }
    
    return calendar;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π
  static isToday(date) {
    const today = new Date();
    return date.toDateString() === today.toDateString();
  }

  // –ü–æ–ª—É—á–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –≤–∞–∂–Ω—ã–µ –ª—É–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
  static getUpcomingLunarEvents(daysAhead = 30) {
    const events = [];
    const today = new Date();
    
    for (let i = 0; i <= daysAhead; i++) {
      const date = new Date(today);
      date.setDate(today.getDate() + i);
      
      const year = date.getFullYear();
      const month = date.getMonth() + 1;
      const day = date.getDate();
      
      const lunarAge = this.calculateLunarAge(year, month, day);
      const phase = this.getPhaseFromAge(lunarAge);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ç–æ—á–Ω—ã–µ —Ñ–∞–∑—ã (—Å –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å—é)
      if (Math.abs(lunarAge - 0) < 0.5 || Math.abs(lunarAge - 29.53) < 0.5) {
        events.push({
          date: date,
          type: 'new-moon',
          name: '–ù–æ–≤–æ–ª—É–Ω–∏–µ',
          emoji: 'üåë',
          description: '–ù–æ–≤—ã–π –ª—É–Ω–Ω—ã–π —Ü–∏–∫–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è'
        });
      } else if (Math.abs(lunarAge - 7.38) < 0.5) {
        events.push({
          date: date,
          type: 'first-quarter',
          name: '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å',
          emoji: 'üåì',
          description: '–õ—É–Ω–∞ –≤ –ø–µ—Ä–≤–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏'
        });
      } else if (Math.abs(lunarAge - 14.77) < 0.5) {
        events.push({
          date: date,
          type: 'full-moon',
          name: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ',
          emoji: 'üåï',
          description: '–ü–æ–ª–Ω–∞—è –ª—É–Ω–∞ –æ—Å–≤–µ—â–∞–µ—Ç –Ω–µ–±–æ'
        });
      } else if (Math.abs(lunarAge - 22.15) < 0.5) {
        events.push({
          date: date,
          type: 'last-quarter',
          name: '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å',
          emoji: 'üåó',
          description: '–õ—É–Ω–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π —á–µ—Ç–≤–µ—Ä—Ç–∏'
        });
      }
    }
    
    return events.slice(0, 8); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞–∫—Å–∏–º—É–º 8 —Å–æ–±—ã—Ç–∏–π
  }
}

export default LunarCalculator;