import React, { createContext, useContext, useMemo } from 'react';

// ===== –ï–î–ò–ù–ê–Ø –ß–ï–†–ù–ê–Ø –¢–ï–ú–ê =====
const DARK_THEME = {
  name: 'dark',
  colors: {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
    primary: '#667eea',
    secondary: '#764ba2',
    accent: '#4facfe',
    
    // –§–æ–Ω—ã
    background: '#0f0f23',
    surface: '#1a1a2e',
    surfaceLight: '#16213e',
    
    // –¢–µ–∫—Å—Ç
    text: '#ffffff',
    textSecondary: '#b8b8cc',
    textMuted: '#8a8a9a',
    
    // –ì—Ä–∞–Ω–∏—Ü—ã –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
    border: 'rgba(255, 255, 255, 0.1)',
    divider: 'rgba(255, 255, 255, 0.05)',
    
    // –°–æ—Å—Ç–æ—è–Ω–∏—è
    success: '#4caf50',
    warning: '#ff9800',
    error: '#f44336',
    info: '#2196f3',
    
    // –ù–∞–ª–æ–∂–µ–Ω–∏—è
    overlay: 'rgba(0, 0, 0, 0.7)',
    backdrop: 'rgba(15, 15, 35, 0.95)'
  },
  
  // –ì–æ—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  components: {
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    container: {
      backgroundColor: '#0f0f23',
      color: '#ffffff',
      fontFamily: 'system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
      lineHeight: '1.6',
      minHeight: '100vh'
    },
    
    // –ö–∞—Ä—Ç–æ—á–∫–∏
    card: {
      background: 'linear-gradient(135deg, rgba(26, 26, 46, 0.9) 0%, rgba(22, 33, 62, 0.8) 100%)',
      backdropFilter: 'blur(10px)',
      WebkitBackdropFilter: 'blur(10px)',
      border: '1px solid rgba(255, 255, 255, 0.1)',
      borderRadius: '16px',
      padding: '24px',
      margin: '16px',
      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',
      color: '#ffffff',
      position: 'relative',
      overflow: 'hidden'
    },
    
    // –ö–Ω–æ–ø–∫–∏
    button: {
      primary: {
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        color: '#ffffff',
        border: 'none',
        borderRadius: '12px',
        padding: '12px 24px',
        fontSize: '16px',
        fontWeight: '600',
        cursor: 'pointer',
        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
        boxShadow: '0 4px 16px rgba(102, 126, 234, 0.3)',
        textAlign: 'center',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '48px'
      },
      
      secondary: {
        background: 'rgba(255, 255, 255, 0.05)',
        color: '#ffffff',
        border: '1px solid rgba(255, 255, 255, 0.2)',
        borderRadius: '12px',
        padding: '12px 24px',
        fontSize: '16px',
        fontWeight: '500',
        cursor: 'pointer',
        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
        textAlign: 'center',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '48px'
      },
      
      ghost: {
        background: 'transparent',
        color: 'rgba(255, 255, 255, 0.8)',
        border: 'none',
        borderRadius: '12px',
        padding: '12px 24px',
        fontSize: '16px',
        fontWeight: '500',
        cursor: 'pointer',
        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
        textAlign: 'center',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '48px'
      }
    },
    
    // –ò–Ω–ø—É—Ç—ã
    input: {
      background: 'rgba(255, 255, 255, 0.05)',
      border: '1px solid rgba(255, 255, 255, 0.2)',
      borderRadius: '12px',
      padding: '12px 16px',
      fontSize: '16px',
      color: '#ffffff',
      outline: 'none',
      transition: 'all 0.3s ease',
      width: '100%',
      boxSizing: 'border-box'
    }
  },
  
  // –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã
  animations: {
    // –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã
    fast: '0.15s ease',
    normal: '0.3s cubic-bezier(0.4, 0, 0.2, 1)',
    slow: '0.5s cubic-bezier(0.4, 0, 0.2, 1)',
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    bounce: '0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55)',
    
    // –§–µ–π–¥—ã
    fadeIn: 'fadeIn 0.3s ease-in-out',
    slideUp: 'slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1)'
  },
  
  // –†–∞–∑–º–µ—Ä—ã –∏ –æ—Ç—Å—Ç—É–ø—ã
  spacing: {
    xs: '4px',
    sm: '8px',
    md: '16px',
    lg: '24px',
    xl: '32px',
    xxl: '48px'
  },
  
  // –†–∞–¥–∏—É—Å—ã —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è
  borderRadius: {
    sm: '8px',
    md: '12px',
    lg: '16px',
    xl: '20px',
    full: '9999px'
  },
  
  // –¢–µ–Ω–∏
  shadows: {
    sm: '0 2px 8px rgba(0, 0, 0, 0.1)',
    md: '0 4px 16px rgba(0, 0, 0, 0.15)',
    lg: '0 8px 32px rgba(0, 0, 0, 0.2)',
    xl: '0 16px 64px rgba(0, 0, 0, 0.25)'
  },
  
  // –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—è
  typography: {
    h1: {
      fontSize: '32px',
      fontWeight: '700',
      lineHeight: '1.2',
      color: '#ffffff',
      margin: '0 0 24px 0'
    },
    h2: {
      fontSize: '24px',
      fontWeight: '600',
      lineHeight: '1.3',
      color: '#ffffff',
      margin: '0 0 20px 0'
    },
    h3: {
      fontSize: '20px',
      fontWeight: '600',
      lineHeight: '1.4',
      color: '#ffffff',
      margin: '0 0 16px 0'
    },
    body: {
      fontSize: '16px',
      fontWeight: '400',
      lineHeight: '1.6',
      color: '#ffffff'
    },
    caption: {
      fontSize: '14px',
      fontWeight: '400',
      lineHeight: '1.5',
      color: 'rgba(255, 255, 255, 0.7)'
    },
    subtitle: {
      fontSize: '18px',
      fontWeight: '500',
      lineHeight: '1.5',
      color: 'rgba(255, 255, 255, 0.9)'
    }
  }
};

// ===== –ö–û–ù–¢–ï–ö–°–¢ =====
const ThemeContext = createContext();

// ===== –•–£–ö–ò =====
export const useTheme = () => {
  const context = useContext(ThemeContext);
  
  if (!context) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  
  return context;
};

// ===== –ü–†–û–í–ê–ô–î–ï–† =====
export const ThemeProvider = ({ children }) => {
  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  const value = useMemo(() => ({
    theme: DARK_THEME,
    currentTheme: 'dark',
    // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º API
    colors: DARK_THEME.colors,
    components: DARK_THEME.components,
    animations: DARK_THEME.animations,
    spacing: DARK_THEME.spacing,
    typography: DARK_THEME.typography
  }), []);

  console.log('üé® ThemeProvider: –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞');

  return (
    <ThemeContext.Provider value={value}>
      {children}
    </ThemeContext.Provider>
  );
};

// ===== –•–ï–õ–ü–ï–†–´ –î–õ–Ø –°–¢–ò–õ–ï–ô =====

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤
export const createGradient = (color1, color2, direction = '135deg') => 
  `linear-gradient(${direction}, ${color1} 0%, ${color2} 100%)`;

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ–Ω–µ–π —Å —Ü–≤–µ—Ç–æ–º
export const createColoredShadow = (color, opacity = 0.3, blur = 16) =>
  `0 4px ${blur}px ${color}${Math.round(opacity * 255).toString(16)}`;

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä glassmorphism —ç—Ñ—Ñ–µ–∫—Ç–∞
export const createGlassmorphism = (background, blur = 10, opacity = 0.1) => ({
  background: `rgba(${background}, ${opacity})`,
  backdropFilter: `blur(${blur}px)`,
  WebkitBackdropFilter: `blur(${blur}px)`,
  border: '1px solid rgba(255, 255, 255, 0.1)'
});

// –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
export const responsive = {
  mobile: '(max-width: 768px)',
  tablet: '(max-width: 1024px)',
  desktop: '(min-width: 1025px)',
  
  // –•–µ–ª–ø–µ—Ä—ã –¥–ª—è —Å—Ç–∏–ª–µ–π
  isMobile: () => window.innerWidth <= 768,
  isTablet: () => window.innerWidth <= 1024 && window.innerWidth > 768,
  isDesktop: () => window.innerWidth >= 1025
};

// ===== CSS-IN-JS –•–ï–õ–ü–ï–†–´ =====

// –°–æ–∑–¥–∞–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
export const createHoverEffect = (baseStyles, hoverStyles) => ({
  ...baseStyles,
  transition: DARK_THEME.animations.normal,
  ':hover': {
    ...baseStyles,
    ...hoverStyles
  }
});

// –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
export const createFadeInAnimation = (duration = '0.3s') => ({
  opacity: 0,
  animation: `fadeIn ${duration} ease-in-out forwards`,
  '@keyframes fadeIn': {
    from: { opacity: 0, transform: 'translateY(20px)' },
    to: { opacity: 1, transform: 'translateY(0)' }
  }
});

// ===== –≠–ö–°–ü–û–†–¢–´ =====
export default ThemeContext;

// –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export {
  DARK_THEME as theme,
  DARK_THEME as darkTheme
};

// CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (typeof document !== 'undefined') {
  const root = document.documentElement;
  const colors = DARK_THEME.colors;
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  Object.entries(colors).forEach(([key, value]) => {
    root.style.setProperty(`--color-${key}`, value);
  });
  
  console.log('üé® CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}
