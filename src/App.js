import React, { useState, useEffect, useMemo } from 'react';
import { ThemeProvider, useTheme } from './contexts/ThemeContext';
import Header from './components/Header';
import BackButton from './components/BackButton'; // –µ—Å–ª–∏ —É –≤–∞—Å –≤ UI/BackButton, –ø–æ–ø—Ä–∞–≤—å—Ç–µ –ø—É—Ç—å
import HoroscopeView from './components/HoroscopeView';
import ZodiacCardsSelector from './components/ZodiacCardsSelector';
import MoonView from './components/MoonView';
import CompatibilityView from './components/CompatibilityView';
import NumerologyView from './components/NumerologyView';
import AstroEventsView from './components/AstroEventsView';
import DayCardView from './components/DayCardView';
import MercuryView from './components/MercuryView';
import BentoGrid from './components/BentoGrid';
import LoadingScreen from './components/LoadingScreen';

import { EnhancedMoonPhase } from './enhanced_moonPhase';
import { useAstrologyData } from './hooks/useAstrologyData';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const ZODIAC_SIGNS = [
  { sign: '–û–≤–µ–Ω', emoji: '‚ôà', dates: '21.03-20.04' },
  { sign: '–¢–µ–ª–µ—Ü', emoji: '‚ôâ', dates: '21.04-20.05' },
  { sign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', emoji: '‚ôä', dates: '21.05-21.06' },
  { sign: '–†–∞–∫', emoji: '‚ôã', dates: '22.06-22.07' },
  { sign: '–õ–µ–≤', emoji: '‚ôå', dates: '23.07-22.08' },
  { sign: '–î–µ–≤–∞', emoji: '‚ôç', dates: '23.08-22.09' },
  { sign: '–í–µ—Å—ã', emoji: '‚ôé', dates: '23.09-22.10' },
  { sign: '–°–∫–æ—Ä–ø–∏–æ–Ω', emoji: '‚ôè', dates: '23.10-22.11' },
  { sign: '–°—Ç—Ä–µ–ª–µ—Ü', emoji: '‚ôê', dates: '23.11-21.12' },
  { sign: '–ö–æ–∑–µ—Ä–æ–≥', emoji: '‚ôë', dates: '22.12-20.01' },
  { sign: '–í–æ–¥–æ–ª–µ–π', emoji: '‚ôí', dates: '21.01-19.02' },
  { sign: '–†—ã–±—ã', emoji: '‚ôì', dates: '20.02-20.03' }
];

const GNOME_PROFILES = {
  '–û–≤–µ–Ω': { name: '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥', title: '–ë–æ–µ–≤–æ–π –∫—É–∑–Ω–µ—Ü', desc: '–°–º–µ–ª—ã–π, –∞–∫—Ç–∏–≤–Ω—ã–π, –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è' },
  '–¢–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥', title: '–ú–∞—Å—Ç–µ—Ä —Å–æ–∫—Ä–æ–≤–∏—â', desc: '–£–ø–æ—Ä–Ω—ã–π, –Ω–∞–¥–µ–∂–Ω—ã–π, —Ü–µ–Ω–∏—Ç –∫–æ–º—Ñ–æ—Ä—Ç' },
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': { name: '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞', title: '–ú—É–¥—Ä—ã–π –ª–µ—Ç–æ–ø–∏—Å–µ—Ü', desc: '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–†–∞–∫': { name: '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –æ—á–∞–≥–∞', desc: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–õ–µ–≤': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤', title: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫', desc: '–ì–æ—Ä–¥—ã–π, —â–µ–¥—Ä—ã–π, –ª—é–±–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ' },
  '–î–µ–≤–∞': { name: '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π', title: '–ú–∞—Å—Ç–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç–∏', desc: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∫ –¥–µ—Ç–∞–ª—è–º' },
  '–í–µ—Å—ã': { name: '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π', title: '–ú–∏—Ä–Ω—ã–π —Å—É–¥—å—è', desc: '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã–π, –∏—â–µ—Ç –±–∞–ª–∞–Ω—Å' },
  '–°–∫–æ—Ä–ø–∏–æ–Ω': { name: '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–µ–∫—Ä–µ—Ç–æ–≤', desc: '–ì–ª—É–±–æ–∫–∏–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π' },
  '–°—Ç—Ä–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', title: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π', desc: '–°–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π' },
  '–ö–æ–∑–µ—Ä–æ–≥': { name: '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å', title: '–ú–∞—Å—Ç–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', desc: '–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π' },
  '–í–æ–¥–æ–ª–µ–π': { name: '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å', title: '–ù–æ–≤–∞—Ç–æ—Ä –±—É–¥—É—â–µ–≥–æ', desc: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π' },
  '–†—ã–±—ã': { name: '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å', title: '–ú–æ—Ä—Å–∫–æ–π –≤–æ–ª—à–µ–±–Ω–∏–∫', desc: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π' }
};

// –ü—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é (off-canvas)
const BurgerMenu = ({ open, onClose, onNavigate, theme }) => {
  const panel = {
    position: 'fixed',
    top: 0,
    left: 0,
    height: '100vh',
    width: '72vw',
    maxWidth: 300,
    backgroundColor: theme.colors.surface,
    borderRight: `1px solid ${theme.colors.border}`,
    boxShadow: '0 0 30px rgba(0,0,0,0.35)',
    transform: open ? 'translateX(0)' : 'translateX(-100%)',
    transition: 'transform 250ms ease',
    zIndex: 1100,
    display: 'flex',
    flexDirection: 'column',
    padding: '16px',
    gap: '8px'
  };
  const backdrop = {
    position: 'fixed',
    inset: 0,
    background: 'rgba(0,0,0,0.45)',
    opacity: open ? 1 : 0,
    pointerEvents: open ? 'auto' : 'none',
    transition: 'opacity 200ms ease',
    zIndex: 1000
  };
  const item = (active) => ({
    padding: '12px 14px',
    borderRadius: 10,
    backgroundColor: active ? theme.colors.primary + '22' : 'transparent',
    color: theme.colors.text,
    border: `1px solid ${active ? theme.colors.primary : theme.colors.border}`,
    cursor: 'pointer',
    fontWeight: active ? 700 : 500
  });

  return (
    <>
      <div style={backdrop} onClick={onClose} />
      <nav style={panel} aria-label="Main navigation">
        <h3 style={{ margin: '0 0 12px', color: theme.colors.text }}>–ú–µ–Ω—é</h3>
        {[
          { id: 'home', label: 'üè† –ì–ª–∞–≤–Ω–∞—è' },
          { id: 'horoscope', label: 'üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø' },
          { id: 'moon', label: 'üåô –õ—É–Ω–∞' },
          { id: 'compatibility', label: 'üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' },
          { id: 'numerology', label: 'üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è' },
          { id: 'events', label: 'üåå –°–æ–±—ã—Ç–∏—è' },
          { id: 'cards', label: 'üÉè –ö–∞—Ä—Ç–∞ –¥–Ω—è' },
          { id: 'mercury', label: 'ü™ê –ú–µ—Ä–∫—É—Ä–∏–π' },
          { id: 'favorites', label: '‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ' },
        ].map((link) => (
          <button
            key={link.id}
            onClick={() => onNavigate(link.id)}
            style={item(false)}
          >
            {link.label}
          </button>
        ))}
      </nav>
    </>
  );
};

function AppContent() {
  const { theme } = useTheme(); // —Ç–µ–º–∞ –æ–¥–Ω–∞ —Ç—ë–º–Ω–∞—è
  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  const [isLoading, setIsLoading] = useState(true);

  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const astrologyData = useAstrologyData({
    autoUpdate: true,
    updateInterval: 6 * 60 * 60 * 1000,
    coordinates: { lat: 55.7558, lng: 37.6173 },
    enableHoroscope: false
  });

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏ (single-screen app)
  const [currentView, setCurrentView] = useState(() => {
    try {
      return localStorage.getItem('gnome-current-view') || 'home';
    } catch {
      return 'home';
    }
  });

  const [selectedSign, setSelectedSign] = useState(() => {
    try {
      return localStorage.getItem('gnome-selected-sign') || '–õ–µ–≤';
    } catch {
      return '–õ–µ–≤';
    }
  });

  const [favorites, setFavorites] = useState(() => {
    try {
      const saved = localStorage.getItem('gnome-favorites');
      return saved ? JSON.parse(saved) : [];
    } catch {
      return [];
    }
  });

  const [menuOpen, setMenuOpen] = useState(false);
  const [isOnline, setIsOnline] = useState(navigator.onLine);

  // Persist
  useEffect(() => {
    try { localStorage.setItem('gnome-current-view', currentView); } catch {}
  }, [currentView]);
  useEffect(() => {
    try { localStorage.setItem('gnome-selected-sign', selectedSign); } catch {}
  }, [selectedSign]);
  useEffect(() => {
    try { localStorage.setItem('gnome-favorites', JSON.stringify(favorites)); } catch {}
  }, [favorites]);

  // Network
  useEffect(() => {
    const on = () => setIsOnline(true);
    const off = () => setIsOnline(false);
    window.addEventListener('online', on);
    window.addEventListener('offline', off);
    return () => {
      window.removeEventListener('online', on);
      window.removeEventListener('offline', off);
    };
  }, []);

  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading) {
    return (
      <LoadingScreen
        onLoadingComplete={() => setIsLoading(false)}
        minLoadingTime={2000}
        showProgress
        backgroundImage="/assets/my-space-bg.jpg"
        circleImage="/assets/circle-background.png"
        gnomeImage="/assets/gnome-astrologer.png"
        headerImage="/assets/header.png"
      />
    );
  }

  // –ö–æ—Ä–Ω–µ–≤–æ–π —Ö–æ–ª—Å—Ç –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞: 100vh, –∫–æ–Ω—Ç–µ–Ω—Ç —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
  const appShell = {
    position: 'relative',
    width: '100vw',
    height: '100vh',
    overflow: 'hidden',            // –∑–∞–ø—Ä–µ—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    backgroundColor: theme.colors.background
  };

  // ¬´–°—Ü–µ–Ω–∞¬ª: –æ–±–ª–∞—Å—Ç—å –ø–æ–¥ —à–∞–ø–∫–æ–π, –≤–º–µ—â–∞—é—â–∞—è –æ–¥–∏–Ω —ç–∫—Ä–∞–Ω
  const stage = {
    position: 'absolute',
    top: 'clamp(56px, 12vw, 120px)', // –≤—ã—Å–æ—Ç–∞ —à–∞–ø–∫–∏ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Header)
    left: 0,
    right: 0,
    bottom: 0,
    display: 'grid',
    placeItems: 'center',
    padding: '16px',
  };

  const burgerBtn = {
    position: 'fixed',
    top: 'calc(clamp(56px, 12vw, 120px) + 12px)',
    left: 16,
    zIndex: 1200,
    width: 44,
    height: 44,
    borderRadius: 12,
    border: `1px solid ${theme.colors.border}`,
    background: theme.colors.surface,
    color: theme.colors.text,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    boxShadow: theme.card?.boxShadow || '0 6px 12px rgba(0,0,0,0.25)',
    cursor: 'pointer',
  };

  const offlineBanner = {
    position: 'fixed',
    top: 'clamp(56px, 12vw, 120px)',
    left: 0,
    right: 0,
    backgroundColor: theme.colors.danger,
    color: 'white',
    padding: 8,
    textAlign: 'center',
    fontSize: 14,
    zIndex: 1300
  };

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ –±—É—Ä–≥–µ—Ä
  const navigate = (view) => {
    setMenuOpen(false);
    setCurrentView(view);
  };

  // –≠–∫—Ä–∞–Ω –ø–æ —Ç–µ–∫—É—â–µ–º—É —Ä–∞–∑–¥–µ–ª—É (–≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ 100vh)
  const Scene = useMemo(() => {
    switch (currentView) {
      case 'horoscope':
        return (
          <div style={{ width: 'min(96vw, 860px)', maxHeight: '100%', overflow: 'hidden' }}>
            <ZodiacCardsSelector selectedSign={selectedSign} onSignSelect={setSelectedSign} showHero />
            <HoroscopeView
              selectedSign={selectedSign}
              gnomeProfile={GNOME_PROFILES[selectedSign]}
              astrologyData={astrologyData}
              onAddToFavorites={(item) =>
                setFavorites(prev => [ { ...item, id: Date.now() }, ...prev ].slice(0, 50))
              }
            />
          </div>
        );
      case 'moon':
        return (
          <div style={{ width: 'min(96vw, 860px)' }}>
            <MoonView
              astrologyData={astrologyData}
              enhancedMoonPhase={EnhancedMoonPhase}
              onAddToFavorites={(item) =>
                setFavorites(prev => [ { ...item, id: Date.now() }, ...prev ].slice(0, 50))
              }
            />
          </div>
        );
      case 'compatibility':
        return <div style={{ width: 'min(96vw, 860px)' }}><CompatibilityView /></div>;
      case 'numerology':
        return <div style={{ width: 'min(96vw, 860px)' }}><NumerologyView /></div>;
      case 'events':
        return <div style={{ width: 'min(96vw, 860px)' }}><AstroEventsView /></div>;
      case 'cards':
        return <div style={{ width: 'min(96vw, 860px)' }}><DayCardView /></div>;
      case 'mercury':
        return <div style={{ width: 'min(96vw, 860px)' }}><MercuryView /></div>;
      case 'favorites':
        return (
          <div style={{ width: 'min(96vw, 860px)' }}>
            {/* –ú–æ–∂–Ω–æ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–º–ø–∞–∫—Ç–Ω–æ */}
            <div style={{ color: theme.colors.textSecondary, textAlign: 'center' }}>
              ‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ: {favorites.length}
            </div>
          </div>
        );
      default: // home
        return (
          <div style={{ width: 'min(96vw, 920px)' }}>
            <ZodiacCardsSelector selectedSign={selectedSign} onSignSelect={setSelectedSign} showHero />
            <BentoGrid
              astrologyData={astrologyData}
              selectedSign={selectedSign}
              gnomeProfiles={GNOME_PROFILES}
              onButtonClick={navigate}
              onSignSelect={setSelectedSign}
            />
          </div>
        );
    }
  }, [currentView, selectedSign, astrologyData, favorites, theme.colors.textSecondary]);

  return (
    <div style={appShell}>
      {/* –®–∞–ø–∫–∞ –æ—Ç –∫—Ä–∞—è –¥–æ –∫—Ä–∞—è (Header —Å–∞–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π) */}
      <Header src="/assets/header.jpg" sticky />

      {/* –ë—É—Ä–≥–µ—Ä-–∫–Ω–æ–ø–∫–∞ */}
      <button
        aria-label="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
        onClick={() => setMenuOpen(true)}
        style={burgerBtn}
      >
        ‚ò∞
      </button>

      {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
      <BurgerMenu
        open={menuOpen}
        onClose={() => setMenuOpen(false)}
        onNavigate={navigate}
        theme={theme}
      />

      {/* –û—Ñ—Ñ–ª–∞–π–Ω-–±–∞–Ω–Ω–µ—Ä */}
      {!isOnline && (
        <div style={offlineBanner}>üîå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</div>
      )}

      {/* –°—Ü–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ */}
      <main style={stage} role="main">
        {Scene}
      </main>
    </div>
  );
}

function App() {
  return (
    <ThemeProvider>
      <AppContent />
    </ThemeProvider>
  );
}

export default App;
