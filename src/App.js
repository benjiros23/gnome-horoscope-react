import React, { useState, useEffect } from 'react';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import HoroscopeView from './components/HoroscopeView';
import ZodiacCarousel from './components/ZodiacCarousel';
import MoonView from './components/MoonView';
import CompatibilityView from './components/CompatibilityView';
import NumerologyView from './components/NumerologyView';
import AstroEventsView from './components/AstroEventsView';
// –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã
import DayCardView from './components/DayCardView';
// import AdviceView from './components/AdviceView';
import MercuryView from './components/MercuryView';
import './App.css';

const ZODIAC_SIGNS = [
  { sign: '–û–≤–µ–Ω', emoji: '‚ôà', dates: '21.03-20.04' },
  { sign: '–¢–µ–ª–µ—Ü', emoji: '‚ôâ', dates: '21.04-20.05' },
  { sign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', emoji: '‚ôä', dates: '21.05-21.06' },
  { sign: '–†–∞–∫', emoji: '‚ôã', dates: '22.06-22.07' },
  { sign: '–õ–µ–≤', emoji: '‚ôå', dates: '23.07-22.08' },
  { sign: '–î–µ–≤–∞', emoji: '‚ôç', dates: '23.08-22.09' },
  { sign: '–í–µ—Å—ã', emoji: '‚ôé', dates: '23.09-22.10' },
  { sign: '–°–∫–æ—Ä–ø–∏–æ–Ω', emoji: '‚ôè', dates: '23.10-22.11' },
  { sign: '–°—Ç—Ä–µ–ª–µ—Ü', emoji: '‚ôê', dates: '23.11-21.12' },
  { sign: '–ö–æ–∑–µ—Ä–æ–≥', emoji: '‚ôë', dates: '22.12-20.01' },
  { sign: '–í–æ–¥–æ–ª–µ–π', emoji: '‚ôí', dates: '21.01-19.02' },
  { sign: '–†—ã–±—ã', emoji: '‚ôì', dates: '20.02-20.03' }
];

const GNOME_PROFILES = {
  '–û–≤–µ–Ω': { name: '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥', title: '–ë–æ–µ–≤–æ–π –∫—É–∑–Ω–µ—Ü', desc: '–°–º–µ–ª—ã–π, –∞–∫—Ç–∏–≤–Ω—ã–π, –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è' },
  '–¢–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥', title: '–ú–∞—Å—Ç–µ—Ä —Å–æ–∫—Ä–æ–≤–∏—â', desc: '–£–ø–æ—Ä–Ω—ã–π, –Ω–∞–¥–µ–∂–Ω—ã–π, —Ü–µ–Ω–∏—Ç –∫–æ–º—Ñ–æ—Ä—Ç' },
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': { name: '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞', title: '–ú—É–¥—Ä—ã–π –ª–µ—Ç–æ–ø–∏—Å–µ—Ü', desc: '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–†–∞–∫': { name: '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –æ—á–∞–≥–∞', desc: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–õ–µ–≤': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤', title: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫', desc: '–ì–æ—Ä–¥—ã–π, —â–µ–¥—Ä—ã–π, –ª—é–±–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ' },
  '–î–µ–≤–∞': { name: '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π', title: '–ú–∞—Å—Ç–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç–∏', desc: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∫ –¥–µ—Ç–∞–ª—è–º' },
  '–í–µ—Å—ã': { name: '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π', title: '–ú–∏—Ä–Ω—ã–π —Å—É–¥—å—è', desc: '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã–π, –∏—â–µ—Ç –±–∞–ª–∞–Ω—Å' },
  '–°–∫–æ—Ä–ø–∏–æ–Ω': { name: '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–µ–∫—Ä–µ—Ç–æ–≤', desc: '–ì–ª—É–±–æ–∫–∏–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π' },
  '–°—Ç—Ä–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', title: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π', desc: '–°–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π' },
  '–ö–æ–∑–µ—Ä–æ–≥': { name: '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å', title: '–ú–∞—Å—Ç–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', desc: '–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π' },
  '–í–æ–¥–æ–ª–µ–π': { name: '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å', title: '–ù–æ–≤–∞—Ç–æ—Ä –±—É–¥—É—â–µ–≥–æ', desc: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π' },
  '–†—ã–±—ã': { name: '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å', title: '–ú–æ—Ä—Å–∫–æ–π –≤–æ–ª—à–µ–±–Ω–∏–∫', desc: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π' }
};

function App() {
  // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const [selectedSign, setSelectedSign] = useState('–õ–µ–≤');
  const [currentScreen, setCurrentScreen] = useState('main');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const [favorites, setFavorites] = useState(() => {
    try {
      const saved = localStorage.getItem('gnome-favorites');
      return saved ? JSON.parse(saved) : [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      return [];
    }
  });
  
  // Telegram WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  const [telegramApp, setTelegramApp] = useState(null);
  const [isOnline, setIsOnline] = useState(navigator.onLine);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  useEffect(() => {
    const tg = window.Telegram?.WebApp;
    if (tg) {
      setTelegramApp(tg);
      tg.ready();
      tg.expand();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
      tg.MainButton.setText('üÉè –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è');
      tg.MainButton.color = '#8BC34A';
      tg.MainButton.show();
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
      tg.MainButton.onClick(() => {
        setCurrentScreen('day-card');
      });
      
      console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
      if (process.env.NODE_ENV === 'development') {
        console.log('üîß –†–∞–±–æ—Ç–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)');
      }
    }
  }, []);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Back Button
  useEffect(() => {
    if (telegramApp?.BackButton) {
      try {
        if (currentScreen !== 'main') {
          telegramApp.BackButton.show();
          telegramApp.BackButton.onClick(() => {
            setCurrentScreen('main');
          });
        } else {
          telegramApp.BackButton.hide();
        }
      } catch (error) {
        console.log('BackButton –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      }
    }
  }, [currentScreen, telegramApp]);
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
  useEffect(() => {
    const handleOnline = () => setIsOnline(true);
    const handleOffline = () => setIsOnline(false);
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);
    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ localStorage
  useEffect(() => {
    try {
      localStorage.setItem('gnome-favorites', JSON.stringify(favorites));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
    }
  }, [favorites]);
  
  // –£—Ç–∏–ª–∏—Ç—ã
  const hapticFeedback = (type = 'impact', style = 'medium') => {
    if (telegramApp?.HapticFeedback) {
      try {
        if (type === 'impact') {
          telegramApp.HapticFeedback.impactOccurred(style);
        } else if (type === 'selection') {
          telegramApp.HapticFeedback.selectionChanged();
        }
      } catch (error) {
        console.log('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      }
    }
  };
  
  const showToast = (message) => {
    if (telegramApp) {
      telegramApp.showAlert(message);
    } else {
      alert(message);
    }
  };
  
  const handleSignSelect = (sign) => {
    setSelectedSign(sign);
    hapticFeedback('selection');
    console.log(`–í—ã–±—Ä–∞–Ω –∑–Ω–∞–∫: ${sign}`);
  };
  
  const handleAddToFavorites = (item) => {
    try {
      const exists = favorites.some(fav => 
        fav.type === item.type && 
        fav.title === item.title && 
        fav.date === item.date
      );
      
      if (exists) {
        showToast('–≠—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!');
        return;
      }
      
      const newItem = {
        ...item,
        id: Date.now() + Math.random(),
        addedAt: new Date().toISOString()
      };
      
      setFavorites(prev => [newItem, ...prev]);
      
      if (favorites.length >= 50) {
        setFavorites(prev => prev.slice(0, 50));
      }
      
      hapticFeedback('impact', 'light');
      console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', newItem);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
      showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
    }
  };
  
  const handleRemoveFromFavorites = (itemId) => {
    setFavorites(prev => prev.filter(item => item.id !== itemId));
    hapticFeedback('impact', 'light');
    showToast('–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
  };
  
  const handleClearFavorites = () => {
    if (telegramApp) {
      telegramApp.showConfirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã?', (confirmed) => {
        if (confirmed) {
          setFavorites([]);
          hapticFeedback('notification', 'warning');
        }
      });
    } else {
      if (window.confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã?')) {
        setFavorites([]);
      }
    }
  };
  
  const handleBack = () => {
    setCurrentScreen('main');
    hapticFeedback('impact', 'light');
  };
  
  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –≥–Ω–æ–º–∞
  const currentProfile = GNOME_PROFILES[selectedSign] || GNOME_PROFILES['–õ–µ–≤'];
  const currentSignData = ZODIAC_SIGNS.find(s => s.sign === selectedSign) || ZODIAC_SIGNS[4];
  
  return (
    <div className="app-container">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="header">
        <h1>üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø</h1>
        <p>–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ—Ç –¥—Ä–µ–≤–Ω–∏—Ö –≥–Ω–æ–º–æ–≤</p>
        {!isOnline && (
          <div className="offline-badge">
            üìµ –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º
          </div>
        )}
      </div>
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω */}
      {currentScreen === 'main' && (
        <div className="main-screen content-enter">
          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
          <div className="card profile-card">
            <h2>{currentProfile.name}</h2>
            <p className="gnome-title">{currentProfile.title}</p>
            <p>{currentProfile.desc}</p>
            <span className="selected-sign">
              {selectedSign} ({currentSignData.dates})
            </span>
          </div>
          
          {/* –ö–∞—Ä—É—Å–µ–ª—å –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ */}
          <ZodiacCarousel
            selectedSign={selectedSign}
            onSignChange={handleSignSelect}
            telegramApp={telegramApp}
          />
          
          {/* –ú–µ–Ω—é –∫–Ω–æ–ø–æ–∫ */}
          <div className="menu-buttons">
            <button className="menu-btn" onClick={() => setCurrentScreen('horoscope')}>
              <div className="btn-icon">üîÆ</div>
              <div className="btn-content">
                <h3>–ì–æ—Ä–æ—Å–∫–æ–ø –¥–Ω—è</h3>
                <p>–£–∑–Ω–∞–π—Ç–µ —á—Ç–æ –≥–æ—Ç–æ–≤—è—Ç –∑–≤–µ–∑–¥—ã</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('moon')}>
              <div className="btn-icon">üåô</div>
              <div className="btn-content">
                <h3>–õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h3>
                <p>–§–∞–∑—ã –∏ –≤–ª–∏—è–Ω–∏–µ –ª—É–Ω—ã</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('numerology')}>
              <div className="btn-icon">üî¢</div>
              <div className="btn-content">
                <h3>–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è</h3>
                <p>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('compatibility')}>
              <div className="btn-icon">üë´</div>
              <div className="btn-content">
                <h3>–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</h3>
                <p>–£–∑–Ω–∞–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('events')}>
              <div className="btn-icon">üåå</div>
              <div className="btn-content">
                <h3>–ê—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è</h3>
                <p>–ù–µ–±–µ—Å–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è</p>
              </div>
            </button>
            
            {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ */}
            <button className="menu-btn" onClick={() => setCurrentScreen('day-card')}>
              <div className="btn-icon">üÉè</div>
              <div className="btn-content">
                <h3>–ö–∞—Ä—Ç–∞ –¥–Ω—è</h3>
                <p>–ú—É–¥—Ä–æ—Å—Ç—å –¥—Ä–µ–≤–Ω–∏—Ö –≥–Ω–æ–º–æ–≤</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('advice')}>
              <div className="btn-icon">üí°</div>
              <div className="btn-content">
                <h3>–°–æ–≤–µ—Ç –¥–Ω—è</h3>
                <p>–õ–∏—á–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('mercury')}>
              <div className="btn-icon">ü™ê</div>
              <div className="btn-content">
                <h3>–°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è</h3>
                <p>–í–ª–∏—è–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é</p>
              </div>
            </button>
            
            <button className="menu-btn" onClick={() => setCurrentScreen('favorites')}>
              <div className="btn-icon">‚ù§Ô∏è</div>
              <div className="btn-content">
                <h3>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h3>
                <p>–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è ({favorites.length})</p>
              </div>
            </button>
          </div>
        </div>
      )}
      
      {/* –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï —ç–∫—Ä–∞–Ω—ã */}
      {currentScreen === 'horoscope' && (
        <HoroscopeView
          selectedSign={selectedSign}
          onBack={handleBack}
          onAddToFavorites={handleAddToFavorites}
          telegramApp={telegramApp}
        />
      )}
      
      {currentScreen === 'moon' && (
        <MoonView
          onBack={handleBack}
          onAddToFavorites={handleAddToFavorites}
          telegramApp={telegramApp}
        />
      )}
      
      {currentScreen === 'numerology' && (
        <NumerologyView
          onBack={handleBack}
          onAddToFavorites={handleAddToFavorites}
          telegramApp={telegramApp}
        />
      )}
      
      {currentScreen === 'compatibility' && (
        <CompatibilityView
          onBack={handleBack}
          onAddToFavorites={handleAddToFavorites}
          telegramApp={telegramApp}
        />
      )}

{currentScreen === 'day-card' && (
  <DayCardView
    onBack={handleBack}
    onAddToFavorites={handleAddToFavorites}
    telegramApp={telegramApp}
  />
)}


      {currentScreen === 'events' && (
        <AstroEventsView
          onBack={handleBack}
          onAddToFavorites={handleAddToFavorites}
          telegramApp={telegramApp}
        />
      )}
{currentScreen === 'mercury' && (
  <MercuryView
    onBack={handleBack}
    onAddToFavorites={handleAddToFavorites}
    telegramApp={telegramApp}
  />
)}
      
      {/* –≠–∫—Ä–∞–Ω –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
      {currentScreen === 'favorites' && (
        <div className="favorites-screen content-enter">
          <div className="card">
            <h3 className="content-title">‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h3>
            
            {favorites.length === 0 ? (
              <div className="empty-favorites">
                <div className="empty-icon">üìù</div>
                <h4>–ó–¥–µ—Å—å –ø–æ–∫–∞ –ø—É—Å—Ç–æ</h4>
                <p>–î–æ–±–∞–≤–ª—è–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –∫–∞—Ä—Ç—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!</p>
                <small>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ" –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π</small>
              </div>
            ) : (
              <>
                <div className="favorites-header">
                  <p>–£ –≤–∞—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: <strong>{favorites.length}</strong></p>
                  <button 
                    className="btn-danger" 
                    onClick={handleClearFavorites}
                    title="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ"
                  >
                    üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
                  </button>
                </div>
                
                <div className="favorites-list">
                  {favorites.map((item) => (
                    <div key={item.id} className="favorite-item">
                      <div className="favorite-header">
                        <h5>{item.title}</h5>
                        <button 
                          className="remove-btn"
                          onClick={() => handleRemoveFromFavorites(item.id)}
                          title="–£–¥–∞–ª–∏—Ç—å"
                        >
                          √ó
                        </button>
                      </div>
                      <p className="favorite-date">{item.date}</p>
                      <p className="favorite-content">{item.content}</p>
                      {item.source && (
                        <span className={`source-badge ${item.source}`}>
                          {item.source === 'internet' ? 'üåê' : 'üì±'} {item.source}
                        </span>
                      )}
                    </div>
                  ))}
                </div>
              </>
            )}
            
            <div className="action-buttons">
              <button className="btn-secondary" onClick={handleBack}>
                ‚Üê –ù–∞–∑–∞–¥
              </button>
            </div>
          </div>
        </div>
      )}
      
      {/* –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ */}
      {['advice'].includes(currentScreen) && (
        <div className="card content-enter">
          <h3>üöß –≠–∫—Ä–∞–Ω: {currentScreen}</h3>
          <p>–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
          <div className="placeholder-info">
            <p>üì± <strong>{currentScreen}</strong> –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏</p>
            <p>üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–º—É API: –≥–æ—Ç–æ–≤–æ</p>
            <p>‚ö° Telegram WebApp: –∞–∫—Ç–∏–≤–Ω–æ</p>
            <p>üéØ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤: –≤—Å–µ endpoints —Ä–∞–±–æ—Ç–∞—é—Ç</p>
          </div>
          <div style={{ marginTop: '24px' }}>
            <button className="btn-secondary" onClick={handleBack}>
              ‚Üê –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
