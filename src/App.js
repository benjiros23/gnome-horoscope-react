import React, { useState, useEffect, useMemo } from 'react';
import { ThemeProvider, useTheme } from './contexts/ThemeContext';

// –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI
const Header = () => (
  <header style={{
    position: 'fixed',
    top: 0,
    left: 0,
    right: 0,
    height: 'clamp(56px, 12vw, 120px)',
    zIndex: 1000,
    background: 'url("/assets/header.jpg") center/cover',
    boxShadow: '0 2px 8px rgba(0,0,0,0.3)'
  }} />
);

const LoadingScreen = ({ onLoadingComplete }) => {
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => {
      setProgress(p => {
        if (p >= 100) {
          clearInterval(timer);
          setTimeout(onLoadingComplete, 500);
          return 100;
        }
        return p + 2;
      });
    }, 50);
    return () => clearInterval(timer);
  }, [onLoadingComplete]);

  return (
    <div style={{
      position: 'fixed',
      inset: 0,
      background: 'radial-gradient(ellipse at center, #2D1B69 0%, #1A1A2E 50%, #0F0F1A 100%)',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      color: '#fff',
      zIndex: 9999
    }}>
      <h1 style={{ fontSize: '2rem', marginBottom: '20px', color: '#F4C542' }}>
        üßô‚Äç‚ôÇÔ∏è GNOME HOROSCOPE
      </h1>
      <div style={{
        width: 300,
        height: 8,
        background: 'rgba(244,197,66,0.3)',
        borderRadius: 4,
        overflow: 'hidden'
      }}>
        <div style={{
          width: `${progress}%`,
          height: '100%',
          background: '#F4C542',
          transition: 'width 0.1s ease'
        }} />
      </div>
      <p style={{ marginTop: '16px', opacity: 0.8 }}>
        Consulting the Cosmic Gnomes...
      </p>
    </div>
  );
};

// –î–∞–Ω–Ω—ã–µ
const ZODIAC_SIGNS = [
  { sign: '–û–≤–µ–Ω', emoji: '‚ôà', dates: '21.03-20.04' },
  { sign: '–¢–µ–ª–µ—Ü', emoji: '‚ôâ', dates: '21.04-20.05' },
  { sign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', emoji: '‚ôä', dates: '21.05-21.06' },
  { sign: '–†–∞–∫', emoji: '‚ôã', dates: '22.06-22.07' },
  { sign: '–õ–µ–≤', emoji: '‚ôå', dates: '23.07-22.08' },
  { sign: '–î–µ–≤–∞', emoji: '‚ôç', dates: '23.08-22.09' },
  { sign: '–í–µ—Å—ã', emoji: '‚ôé', dates: '23.09-22.10' },
  { sign: '–°–∫–æ—Ä–ø–∏–æ–Ω', emoji: '‚ôè', dates: '23.10-22.11' },
  { sign: '–°—Ç—Ä–µ–ª–µ—Ü', emoji: '‚ôê', dates: '23.11-21.12' },
  { sign: '–ö–æ–∑–µ—Ä–æ–≥', emoji: '‚ôë', dates: '22.12-20.01' },
  { sign: '–í–æ–¥–æ–ª–µ–π', emoji: '‚ôí', dates: '21.01-19.02' },
  { sign: '–†—ã–±—ã', emoji: '‚ôì', dates: '20.02-20.03' }
];

const GNOME_PROFILES = {
  '–û–≤–µ–Ω': { name: '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥', title: '–ë–æ–µ–≤–æ–π –∫—É–∑–Ω–µ—Ü', desc: '–°–º–µ–ª—ã–π, –∞–∫—Ç–∏–≤–Ω—ã–π, –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è' },
  '–¢–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥', title: '–ú–∞—Å—Ç–µ—Ä —Å–æ–∫—Ä–æ–≤–∏—â', desc: '–£–ø–æ—Ä–Ω—ã–π, –Ω–∞–¥–µ–∂–Ω—ã–π, —Ü–µ–Ω–∏—Ç –∫–æ–º—Ñ–æ—Ä—Ç' },
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': { name: '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞', title: '–ú—É–¥—Ä—ã–π –ª–µ—Ç–æ–ø–∏—Å–µ—Ü', desc: '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–†–∞–∫': { name: '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –æ—á–∞–≥–∞', desc: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–õ–µ–≤': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤', title: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫', desc: '–ì–æ—Ä–¥—ã–π, —â–µ–¥—Ä—ã–π, –ª—é–±–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ' },
  '–î–µ–≤–∞': { name: '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π', title: '–ú–∞—Å—Ç–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç–∏', desc: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∫ –¥–µ—Ç–∞–ª—è–º' },
  '–í–µ—Å—ã': { name: '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π', title: '–ú–∏—Ä–Ω—ã–π —Å—É–¥—å—è', desc: '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã–π, –∏—â–µ—Ç –±–∞–ª–∞–Ω—Å' },
  '–°–∫–æ—Ä–ø–∏–æ–Ω': { name: '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–µ–∫—Ä–µ—Ç–æ–≤', desc: '–ì–ª—É–±–æ–∫–∏–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π' },
  '–°—Ç—Ä–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', title: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π', desc: '–°–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π' },
  '–ö–æ–∑–µ—Ä–æ–≥': { name: '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å', title: '–ú–∞—Å—Ç–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', desc: '–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π' },
  '–í–æ–¥–æ–ª–µ–π': { name: '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å', title: '–ù–æ–≤–∞—Ç–æ—Ä –±—É–¥—É—â–µ–≥–æ', desc: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π' },
  '–†—ã–±—ã': { name: '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å', title: '–ú–æ—Ä—Å–∫–æ–π –≤–æ–ª—à–µ–±–Ω–∏–∫', desc: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π' }
};

// –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é
const BurgerMenu = ({ open, onClose, onNavigate, theme, currentView }) => {
  const menuItems = [
    { id: 'home', label: 'üè† –ì–ª–∞–≤–Ω–∞—è' },
    { id: 'horoscope', label: 'üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø' },
    { id: 'moon', label: 'üåô –õ—É–Ω–∞' },
    { id: 'compatibility', label: 'üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' },
    { id: 'numerology', label: 'üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è' },
    { id: 'events', label: 'üåå –°–æ–±—ã—Ç–∏—è' },
    { id: 'cards', label: 'üÉè –ö–∞—Ä—Ç–∞ –¥–Ω—è' },
    { id: 'mercury', label: 'ü™ê –ú–µ—Ä–∫—É—Ä–∏–π' },
    { id: 'favorites', label: '‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ' },
  ];

  const handleNavigate = (id) => {
    onNavigate(id);
    onClose();
  };

  if (!open) return null;

  return (
    <>
      <div 
        style={{
          position: 'fixed',
          inset: 0,
          background: 'rgba(0,0,0,0.5)',
          zIndex: 1000
        }}
        onClick={onClose}
      />
      <nav style={{
        position: 'fixed',
        top: 0,
        left: 0,
        height: '100vh',
        width: '280px',
        background: theme.colors.surface,
        transform: open ? 'translateX(0)' : 'translateX(-100%)',
        transition: 'transform 250ms ease',
        zIndex: 1100,
        padding: '20px',
        boxShadow: '2px 0 10px rgba(0,0,0,0.3)'
      }}>
        <h3 style={{ margin: '0 0 20px', color: theme.colors.text }}>–ú–µ–Ω—é</h3>
        {menuItems.map(item => (
          <button
            key={item.id}
            onClick={() => handleNavigate(item.id)}
            style={{
              display: 'block',
              width: '100%',
              padding: '12px 16px',
              margin: '4px 0',
              background: currentView === item.id ? theme.colors.primary + '20' : 'transparent',
              border: `1px solid ${currentView === item.id ? theme.colors.primary : theme.colors.border}`,
              borderRadius: '8px',
              color: theme.colors.text,
              textAlign: 'left',
              cursor: 'pointer',
              fontWeight: currentView === item.id ? 'bold' : 'normal'
            }}
          >
            {item.label}
          </button>
        ))}
      </nav>
    </>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
function AppContent() {
  const { theme } = useTheme();
  
  const [isLoading, setIsLoading] = useState(true);
  const [currentView, setCurrentView] = useState('home');
  const [selectedSign, setSelectedSign] = useState('–õ–µ–≤');
  const [menuOpen, setMenuOpen] = useState(false);
  const [isOnline, setIsOnline] = useState(navigator.onLine);

  // Network status
  useEffect(() => {
    const handleOnline = () => setIsOnline(true);
    const handleOffline = () => setIsOnline(false);
    
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);
    
    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);

  // Persist state
  useEffect(() => {
    try {
      localStorage.setItem('gnome-current-view', currentView);
      localStorage.setItem('gnome-selected-sign', selectedSign);
    } catch (e) {}
  }, [currentView, selectedSign]);

  if (isLoading) {
    return <LoadingScreen onLoadingComplete={() => setIsLoading(false)} />;
  }

  // –†–µ–Ω–¥–µ—Ä —Å—Ü–µ–Ω
  const renderScene = () => {
    const commonStyle = {
      width: 'min(95vw, 800px)',
      maxHeight: 'calc(100vh - 80px)',
      overflow: 'auto',
      padding: '20px',
      color: theme.colors.text
    };

    switch (currentView) {
      case 'horoscope':
        return (
          <div style={commonStyle}>
            <h2>üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {selectedSign}</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              margin: '20px 0'
            }}>
              <h3>{GNOME_PROFILES[selectedSign]?.name}</h3>
              <p>{GNOME_PROFILES[selectedSign]?.desc}</p>
              <p>–í–∞—à –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º–∏ –≥–Ω–æ–º–∞–º–∏...</p>
            </div>
          </div>
        );

      case 'moon':
        return (
          <div style={commonStyle}>
            <h2>üåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '4rem', margin: '20px 0' }}>üåó</div>
              <p>–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –ª—É–Ω—ã –∏ –µ—ë –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–∞—à –∑–Ω–∞–∫ {selectedSign}</p>
            </div>
          </div>
        );

      case 'compatibility':
        return (
          <div style={commonStyle}>
            <h2>üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <p>–£–∑–Ω–∞–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥–∏–∞–∫–∞</p>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>üíë</div>
            </div>
          </div>
        );

      case 'numerology':
        return (
          <div style={commonStyle}>
            <h2>üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <p>–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–π–Ω—ã —á–∏—Å–µ–ª –≤–∞—à–µ–π —Å—É–¥—å–±—ã</p>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>üîÆ</div>
            </div>
          </div>
        );

      case 'events':
        return (
          <div style={commonStyle}>
            <h2>üåå –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <p>–í–∞–∂–Ω—ã–µ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ</p>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>‚≠ê</div>
            </div>
          </div>
        );

      case 'cards':
        return (
          <div style={commonStyle}>
            <h2>üÉè –ö–∞—Ä—Ç–∞ –¥–Ω—è</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <p>–ü–æ–ª—É—á–∏—Ç–µ —Å–æ–≤–µ—Ç –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</p>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>üé¥</div>
            </div>
          </div>
        );

      case 'mercury':
        return (
          <div style={commonStyle}>
            <h2>ü™ê –ú–µ—Ä–∫—É—Ä–∏–π –≤ —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–µ</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <p>–í–ª–∏—è–Ω–∏–µ —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω–æ–≥–æ –ú–µ—Ä–∫—É—Ä–∏—è –Ω–∞ –≤–∞—à—É –∂–∏–∑–Ω—å</p>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>ü™ê</div>
            </div>
          </div>
        );

      case 'favorites':
        return (
          <div style={commonStyle}>
            <h2>‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h2>
            <div style={{
              background: theme.colors.surface,
              padding: '20px',
              borderRadius: '12px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '3rem', margin: '20px 0' }}>üì´</div>
              <p>–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è</p>
            </div>
          </div>
        );

      default: // home
        return (
          <div style={commonStyle}>
            <div style={{ textAlign: 'center', marginBottom: '30px' }}>
              <h1 style={{ 
                fontSize: '2.5rem', 
                background: `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.secondary})`,
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
                margin: '0 0 10px 0'
              }}>
                üßô‚Äç‚ôÇÔ∏è –ê—Å—Ç—Ä–æ –ì–Ω–æ–º
              </h1>
              <p style={{ opacity: 0.8 }}>{GNOME_PROFILES[selectedSign]?.desc}</p>
            </div>

            {/* –°–µ–ª–µ–∫—Ç–æ—Ä –∑–Ω–∞–∫–∞ */}
            <div style={{
              display: 'flex',
              overflowX: 'auto',
              gap: '10px',
              padding: '10px 0',
              marginBottom: '30px'
            }}>
              {ZODIAC_SIGNS.map(sign => (
                <button
                  key={sign.sign}
                  onClick={() => setSelectedSign(sign.sign)}
                  style={{
                    minWidth: '80px',
                    padding: '10px',
                    border: `2px solid ${selectedSign === sign.sign ? theme.colors.primary : theme.colors.border}`,
                    borderRadius: '12px',
                    background: selectedSign === sign.sign ? theme.colors.primary + '20' : theme.colors.surface,
                    color: theme.colors.text,
                    cursor: 'pointer',
                    fontSize: '12px'
                  }}
                >
                  <div style={{ fontSize: '24px' }}>{sign.emoji}</div>
                  <div>{sign.sign}</div>
                </button>
              ))}
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
              gap: '15px'
            }}>
              {[
                { id: 'horoscope', icon: 'üîÆ', title: '–ì–æ—Ä–æ—Å–∫–æ–ø' },
                { id: 'moon', icon: 'üåô', title: '–õ—É–Ω–∞' },
                { id: 'cards', icon: 'üÉè', title: '–ö–∞—Ä—Ç–∞ –¥–Ω—è' },
                { id: 'compatibility', icon: 'üíï', title: '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' }
              ].map(item => (
                <button
                  key={item.id}
                  onClick={() => setCurrentView(item.id)}
                  style={{
                    padding: '20px',
                    background: theme.colors.surface,
                    border: `1px solid ${theme.colors.border}`,
                    borderRadius: '12px',
                    color: theme.colors.text,
                    cursor: 'pointer',
                    textAlign: 'center'
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>{item.icon}</div>
                  <div>{item.title}</div>
                </button>
              ))}
            </div>
          </div>
        );
    }
  };

  return (
    <div style={{
      position: 'relative',
      width: '100vw',
      height: '100vh',
      overflow: 'hidden',
      background: theme.colors.background
    }}>
      <Header />
      
      {/* –ë—É—Ä–≥–µ—Ä-–∫–Ω–æ–ø–∫–∞ */}
      <button
        onClick={() => setMenuOpen(true)}
        style={{
          position: 'fixed',
          top: 'calc(clamp(56px, 12vw, 120px) + 10px)',
          left: '16px',
          zIndex: 1200,
          width: '44px',
          height: '44px',
          borderRadius: '12px',
          border: `1px solid ${theme.colors.border}`,
          background: theme.colors.surface,
          color: theme.colors.text,
          cursor: 'pointer',
          fontSize: '18px'
        }}
      >
        ‚ò∞
      </button>

      <BurgerMenu
        open={menuOpen}
        onClose={() => setMenuOpen(false)}
        onNavigate={setCurrentView}
        currentView={currentView}
        theme={theme}
      />

      {/* –û—Ñ—Ñ–ª–∞–π–Ω –±–∞–Ω–Ω–µ—Ä */}
      {!isOnline && (
        <div style={{
          position: 'fixed',
          top: 'clamp(56px, 12vw, 120px)',
          left: 0,
          right: 0,
          background: '#dc2626',
          color: 'white',
          padding: '8px',
          textAlign: 'center',
          fontSize: '14px',
          zIndex: 1300
        }}>
          üîå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
        </div>
      )}

      {/* –°—Ü–µ–Ω–∞ */}
      <main style={{
        position: 'absolute',
        top: 'clamp(56px, 12vw, 120px)',
        left: 0,
        right: 0,
        bottom: 0,
        display: 'grid',
        placeItems: 'center',
        padding: '10px'
      }}>
        {renderScene()}
      </main>
    </div>
  );
}

function App() {
  return (
    <ThemeProvider>
      <AppContent />
    </ThemeProvider>
  );
}

export default App;
