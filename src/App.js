import React, { useState, useEffect } from 'react';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import HoroscopeView from './components/HoroscopeView';
import ZodiacCarousel from './components/ZodiacCarousel';
import MoonView from './components/MoonView';
import CompatibilityView from './components/CompatibilityView';
import NumerologyView from './components/NumerologyView';
import AstroEventsView from './components/AstroEventsView';
import DayCardView from './components/DayCardView';
import MercuryView from './components/MercuryView';
import ButtonGrid from './components/ButtonGrid';
import './App.css';

const ZODIAC_SIGNS = [
  { sign: '–û–≤–µ–Ω', emoji: '‚ôà', dates: '21.03-20.04' },
  { sign: '–¢–µ–ª–µ—Ü', emoji: '‚ôâ', dates: '21.04-20.05' },
  { sign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', emoji: '‚ôä', dates: '21.05-21.06' },
  { sign: '–†–∞–∫', emoji: '‚ôã', dates: '22.06-22.07' },
  { sign: '–õ–µ–≤', emoji: '‚ôå', dates: '23.07-22.08' },
  { sign: '–î–µ–≤–∞', emoji: '‚ôç', dates: '23.08-22.09' },
  { sign: '–í–µ—Å—ã', emoji: '‚ôé', dates: '23.09-22.10' },
  { sign: '–°–∫–æ—Ä–ø–∏–æ–Ω', emoji: '‚ôè', dates: '23.10-22.11' },
  { sign: '–°—Ç—Ä–µ–ª–µ—Ü', emoji: '‚ôê', dates: '23.11-21.12' },
  { sign: '–ö–æ–∑–µ—Ä–æ–≥', emoji: '‚ôë', dates: '22.12-20.01' },
  { sign: '–í–æ–¥–æ–ª–µ–π', emoji: '‚ôí', dates: '21.01-19.02' },
  { sign: '–†—ã–±—ã', emoji: '‚ôì', dates: '20.02-20.03' }
];

const GNOME_PROFILES = {
  '–û–≤–µ–Ω': { name: '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥', title: '–ë–æ–µ–≤–æ–π –∫—É–∑–Ω–µ—Ü', desc: '–°–º–µ–ª—ã–π, –∞–∫—Ç–∏–≤–Ω—ã–π, –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è' },
  '–¢–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥', title: '–ú–∞—Å—Ç–µ—Ä —Å–æ–∫—Ä–æ–≤–∏—â', desc: '–£–ø–æ—Ä–Ω—ã–π, –Ω–∞–¥–µ–∂–Ω—ã–π, —Ü–µ–Ω–∏—Ç –∫–æ–º—Ñ–æ—Ä—Ç' },
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': { name: '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞', title: '–ú—É–¥—Ä—ã–π –ª–µ—Ç–æ–ø–∏—Å–µ—Ü', desc: '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–†–∞–∫': { name: '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –æ—á–∞–≥–∞', desc: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π' },
  '–õ–µ–≤': { name: '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤', title: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫', desc: '–ì–æ—Ä–¥—ã–π, —â–µ–¥—Ä—ã–π, –ª—é–±–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ' },
  '–î–µ–≤–∞': { name: '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π', title: '–ú–∞—Å—Ç–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç–∏', desc: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∫ –¥–µ—Ç–∞–ª—è–º' },
  '–í–µ—Å—ã': { name: '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π', title: '–ú–∏—Ä–Ω—ã–π —Å—É–¥—å—è', desc: '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã–π, –∏—â–µ—Ç –±–∞–ª–∞–Ω—Å' },
  '–°–∫–æ—Ä–ø–∏–æ–Ω': { name: '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥', title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–µ–∫—Ä–µ—Ç–æ–≤', desc: '–ì–ª—É–±–æ–∫–∏–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π' },
  '–°—Ç—Ä–µ–ª–µ—Ü': { name: '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', title: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π', desc: '–°–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π' },
  '–ö–æ–∑–µ—Ä–æ–≥': { name: '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å', title: '–ú–∞—Å—Ç–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', desc: '–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π' },
  '–í–æ–¥–æ–ª–µ–π': { name: '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å', title: '–ù–æ–≤–∞—Ç–æ—Ä –±—É–¥—É—â–µ–≥–æ', desc: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π' },
  '–†—ã–±—ã': { name: '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å', title: '–ú–æ—Ä—Å–∫–æ–π –≤–æ–ª—à–µ–±–Ω–∏–∫', desc: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π' }
};

function App() {
  // –í–°–ï –•–£–ö–ò –í –ù–ê–ß–ê–õ–ï –ö–û–ú–ü–û–ù–ï–ù–¢–ê
  const [currentView, setCurrentView] = useState('home');
  const [selectedSign, setSelectedSign] = useState('–õ–µ–≤');
  const [telegramApp, setTelegramApp] = useState(null);
  const [isOnline, setIsOnline] = useState(navigator.onLine);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const [favorites, setFavorites] = useState(() => {
    try {
      const saved = localStorage.getItem('gnome-favorites');
      return saved ? JSON.parse(saved) : [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      return [];
    }
  });

  // Telegram WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  useEffect(() => {
    const tg = window.Telegram?.WebApp;
    if (tg) {
      setTelegramApp(tg);
      tg.ready();
      tg.expand();
      
      try {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        tg.MainButton.setText('üÉè –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è');
        tg.MainButton.color = '#8BC34A';
        tg.MainButton.show();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        tg.MainButton.onClick(() => {
          setCurrentView('cards');
        });
      } catch (error) {
        console.log('MainButton –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      }
      
      console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('üîß –†–∞–±–æ—Ç–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)');
    }
  }, []);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Back Button
  useEffect(() => {
    if (telegramApp?.BackButton) {
      try {
        if (currentView !== 'home') {
          telegramApp.BackButton.show();
          telegramApp.BackButton.onClick(() => {
            setCurrentView('home');
          });
        } else {
          telegramApp.BackButton.hide();
        }
      } catch (error) {
        console.log('BackButton –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      }
    }
  }, [currentView, telegramApp]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
  useEffect(() => {
    const handleOnline = () => setIsOnline(true);
    const handleOffline = () => setIsOnline(false);
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);
    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ localStorage
  useEffect(() => {
    try {
      localStorage.setItem('gnome-favorites', JSON.stringify(favorites));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
    }
  }, [favorites]);

  // –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
  const handleButtonClick = (buttonId) => {
    console.log('–í—ã–±—Ä–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è:', buttonId);
    setCurrentView(buttonId);
    
    // Haptic feedback –¥–ª—è Telegram
    if (telegramApp?.HapticFeedback) {
      try {
        telegramApp.HapticFeedback.selectionChanged();
      } catch (error) {
        console.log('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    }
  };

  const handleBackToHome = () => {
    setCurrentView('home');
  };

  const handleSignSelect = (sign) => {
    setSelectedSign(sign);
    console.log(`–í—ã–±—Ä–∞–Ω –∑–Ω–∞–∫: ${sign}`);
  };

  const handleAddToFavorites = (item) => {
    try {
      const exists = favorites.some(fav => 
        fav.type === item.type && 
        fav.title === item.title && 
        fav.date === item.date
      );
      
      if (exists) {
        if (telegramApp) {
          telegramApp.showAlert('–≠—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!');
        } else {
          alert('–≠—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!');
        }
        return;
      }
      
      const newItem = {
        ...item,
        id: Date.now() + Math.random(),
        addedAt: new Date().toISOString()
      };
      
      setFavorites(prev => {
        const updated = [newItem, ...prev];
        return updated.length > 50 ? updated.slice(0, 50) : updated;
      });
      
      if (telegramApp?.HapticFeedback) {
        try {
          telegramApp.HapticFeedback.impactOccurred('light');
        } catch (error) {
          console.log('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }
      }
      
      console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', newItem);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
    }
  };

  const handleRemoveFromFavorites = (itemId) => {
    setFavorites(prev => prev.filter(item => item.id !== itemId));
  };

  const handleClearFavorites = () => {
    if (telegramApp) {
      telegramApp.showConfirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã?', (confirmed) => {
        if (confirmed) {
          setFavorites([]);
        }
      });
    } else {
      if (window.confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã?')) {
        setFavorites([]);
      }
    }
  };

  // –°–¢–ò–õ–ò
  // –û–±–Ω–æ–≤–∏—Ç–µ styles –æ–±—ä–µ–∫—Ç –≤ App.js
const styles = {
  app: {
    minHeight: '100vh',
    backgroundColor: '#f4f4f0', // –ß–∏—Å—Ç—ã–π —Ü–≤–µ—Ç –±–µ–∑ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
    padding: '0',
    fontFamily: '"Courier New", monospace',
    imageRendering: 'pixelated' // –ü–∏–∫—Å–µ–ª—å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
  },
  backButton: {
    position: 'fixed',
    top: '16px',
    left: '16px',
    backgroundColor: '#8a6c4c', // –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π –∏–∑ –ø–∞–ª–∏—Ç—Ä—ã
    color: '#ffffff',
    border: '2px solid #000000',
    borderRadius: '6px',
    padding: '10px 14px',
    cursor: 'pointer',
    fontSize: '12px',
    fontWeight: 'bold',
    boxShadow: '2px 2px 0px #000000',
    zIndex: 1000,
    transition: 'all 0.1s ease',
    fontFamily: '"Courier New", monospace',
    textTransform: 'uppercase',
    letterSpacing: '1px'
  },
  header: {
    textAlign: 'center',
    padding: '24px 20px',
    backgroundColor: '#62862a', // –ó–µ–ª–µ–Ω—ã–π –∏–∑ –ø–∞–ª–∏—Ç—Ä—ã
    marginBottom: '20px',
    border: '3px solid #000000',
    margin: '16px',
    borderRadius: '8px',
    boxShadow: '3px 3px 0px #000000'
  },
  title: {
    color: '#ffffff',
    fontSize: '24px',
    fontWeight: 'bold',
    marginBottom: '8px',
    textShadow: '2px 2px 0px #000000',
    fontFamily: '"Courier New", monospace',
    textTransform: 'uppercase',
    letterSpacing: '2px'
  },
  subtitle: {
    color: '#f4f4f0',
    fontStyle: 'normal',
    fontSize: '12px',
    fontWeight: 'bold',
    textTransform: 'uppercase',
    letterSpacing: '1px'
  },
  offlineBadge: {
    backgroundColor: '#a96a14', // –Ø–Ω—Ç–∞—Ä–Ω—ã–π
    color: '#ffffff',
    padding: '6px 12px',
    borderRadius: '4px',
    fontSize: '10px',
    marginTop: '12px',
    display: 'inline-block',
    fontWeight: 'bold',
    border: '2px solid #000000',
    boxShadow: '2px 2px 0px #000000',
    textTransform: 'uppercase'
  },
  profileCard: {
    backgroundColor: '#b6bb9b', // –®–∞–ª—Ñ–µ–π –∏–∑ –ø–∞–ª–∏—Ç—Ä—ã
    margin: '16px',
    padding: '20px',
    borderRadius: '8px',
    border: '3px solid #000000',
    boxShadow: '4px 4px 0px #000000',
    textAlign: 'center'
  },
  profileTitle: {
    color: '#000000',
    marginBottom: '8px',
    fontSize: '18px',
    fontWeight: 'bold',
    textTransform: 'uppercase',
    letterSpacing: '1px'
  },
  profileSubtitle: {
    color: '#000000',
    fontSize: '12px',
    marginBottom: '8px',
    fontWeight: 'bold',
    textTransform: 'uppercase'
  },
  profileDesc: {
    color: '#000000',
    marginBottom: '16px',
    lineHeight: '1.4',
    fontSize: '11px'
  },
  selectedSignBadge: {
    backgroundColor: '#8e8e15', // –û–ª–∏–≤–∫–æ–≤—ã–π
    color: '#ffffff',
    padding: '6px 12px',
    borderRadius: '4px',
    fontSize: '10px',
    fontWeight: 'bold',
    border: '2px solid #000000',
    boxShadow: '2px 2px 0px #000000',
    textTransform: 'uppercase',
    letterSpacing: '1px'
  }
};


  // –†–ï–ù–î–ï–† –¢–ï–ö–£–©–ï–ì–û –≠–ö–†–ê–ù–ê
  const renderCurrentView = () => {
    switch (currentView) {
      case 'horoscope':
        return (
          <HoroscopeView
            selectedSign={selectedSign}
            onSignSelect={handleSignSelect}
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'moon':
        return (
          <MoonView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'numerology':
        return (
          <NumerologyView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'compatibility':
        return (
          <CompatibilityView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'cards':
        return (
          <DayCardView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'events':
        return (
          <AstroEventsView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'mercury':
        return (
          <MercuryView
            onAddToFavorites={handleAddToFavorites}
            telegramApp={telegramApp}
          />
        );
      
      case 'favorites':
        return (
          <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>
            <h3 style={{ color: '#8BC34A', textAlign: 'center', marginBottom: '20px' }}>
              ‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
            </h3>
            
            {favorites.length === 0 ? (
              <div style={{ textAlign: 'center', padding: '40px 20px' }}>
                <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìù</div>
                <h4>–ó–¥–µ—Å—å –ø–æ–∫–∞ –ø—É—Å—Ç–æ</h4>
                <p>–î–æ–±–∞–≤–ª—è–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!</p>
              </div>
            ) : (
              <>
                <div style={{ 
                  display: 'flex', 
                  justifyContent: 'space-between', 
                  alignItems: 'center', 
                  marginBottom: '20px' 
                }}>
                  <p>–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: <strong>{favorites.length}</strong></p>
                  <button 
                    onClick={handleClearFavorites}
                    style={{
                      background: '#dc3545',
                      color: 'white',
                      border: 'none',
                      padding: '8px 16px',
                      borderRadius: '8px',
                      cursor: 'pointer'
                    }}
                  >
                    üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
                  </button>
                </div>
                
                <div>
                  {favorites.map((item) => (
                    <div 
                      key={item.id} 
                      style={{
                        background: 'white',
                        padding: '16px',
                        borderRadius: '12px',
                        marginBottom: '12px',
                        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
                      }}
                    >
                      <div style={{ 
                        display: 'flex', 
                        justifyContent: 'space-between', 
                        alignItems: 'flex-start',
                        marginBottom: '8px'
                      }}>
                        <h5 style={{ margin: 0, color: '#333' }}>{item.title}</h5>
                        <button 
                          onClick={() => handleRemoveFromFavorites(item.id)}
                          style={{
                            background: 'none',
                            border: 'none',
                            fontSize: '18px',
                            cursor: 'pointer',
                            color: '#dc3545'
                          }}
                        >
                          √ó
                        </button>
                      </div>
                      <p style={{ fontSize: '12px', color: '#666', margin: '0 0 8px 0' }}>
                        {item.date}
                      </p>
                      <p style={{ margin: 0, color: '#333' }}>{item.content}</p>
                    </div>
                  ))}
                </div>
              </>
            )}
          </div>
        );
      
      case 'advice':
        return (
          <div style={{ padding: '20px', textAlign: 'center' }}>
            <h3 style={{ color: '#8BC34A' }}>üöß –°–æ–≤–µ—Ç –¥–Ω—è</h3>
            <p>–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <p>üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –≥–æ—Ç–æ–≤–æ</p>
            <p>üîó –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω</p>
          </div>
        );
      
      default:
        return (
          <div>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div style={styles.header}>
              <h1 style={styles.title}>üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø</h1>
              <p style={styles.subtitle}>–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ—Ç –¥—Ä–µ–≤–Ω–∏—Ö –≥–Ω–æ–º–æ–≤</p>
              {!isOnline && (
                <div style={styles.offlineBadge}>
                  üìµ –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º
                </div>
              )}
            </div>

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
            <div style={{
              background: 'white',
              margin: '20px',
              padding: '20px',
              borderRadius: '16px',
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
              textAlign: 'center'
            }}>
              <h2 style={{ color: '#8BC34A', marginBottom: '8px' }}>
                {GNOME_PROFILES[selectedSign]?.name || '–ì–Ω–æ–º –ú—É–¥—Ä—ã–π'}
              </h2>
              <p style={{ color: '#666', fontSize: '14px', marginBottom: '8px' }}>
                {GNOME_PROFILES[selectedSign]?.title || '–ú–∞—Å—Ç–µ—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π'}
              </p>
              <p style={{ color: '#333', marginBottom: '12px' }}>
                {GNOME_PROFILES[selectedSign]?.desc || '–î—Ä–µ–≤–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å –≥–Ω–æ–º–æ–≤'}
              </p>
              <span style={{
                background: 'linear-gradient(135deg, #8BC34A, #FFC107)',
                color: 'white',
                padding: '4px 12px',
                borderRadius: '16px',
                fontSize: '12px'
              }}>
                {selectedSign} ({ZODIAC_SIGNS.find(s => s.sign === selectedSign)?.dates})
              </span>
            </div>

            {/* –ö–∞—Ä—É—Å–µ–ª—å –∑–Ω–∞–∫–æ–≤ */}
            {ZodiacCarousel && (
              <ZodiacCarousel
                selectedSign={selectedSign}
                onSignChange={handleSignSelect}
                telegramApp={telegramApp}
              />
            )}

            {/* –°–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ */}
            <ButtonGrid onButtonClick={handleButtonClick} />
          </div>
        );
    }
  };

  return (
    <div style={styles.app}>
      {currentView !== 'home' && (
        <button style={styles.backButton} onClick={handleBackToHome}>
          ‚Üê –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        </button>
      )}
      
      {renderCurrentView()}
    </div>
  );
}

export default App;
