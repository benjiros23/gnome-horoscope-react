// src/components/AstroEventsView.js
import React, { useState, useEffect } from 'react';
import { useTheme } from '../contexts/ThemeContext';
import { useAstroEvents } from '../hooks/useAstrologyData';
import Card from './UI/Card';
import Button from './UI/Button';


const AstroEventsView = ({ onBack, onAddToFavorites, selectedSign = null }) => {
  const { theme, styles, createGradientStyle } = useTheme();
  const [events, setEvents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedEvent, setSelectedEvent] = useState(null);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
  const getCurrentAstroEvents = () => {
    const today = new Date();
    const currentMonth = today.getMonth();
    const currentDay = today.getDate();
    
    const realEvents = [
      {
        id: 1,
        planet: '–ú–µ—Ä–∫—É—Ä–∏–π',
        planetIcon: '‚òøÔ∏è',
        status: currentMonth === 0 ? '—Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥' : '–∞–∫—Ç–∏–≤–Ω—ã–π',
        title: '–†–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –ú–µ—Ä–∫—É—Ä–∏–π –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏',
        period: currentMonth === 0 ? '1 - 25 —è–Ω–≤–∞—Ä—è 2025' : '–°–ª–µ–¥—É—é—â–∏–π: —Ñ–µ–≤—Ä–∞–ª—å 2025',
        description: `–°–µ–π—á–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç: ${currentMonth === 0 ? '–ú–µ—Ä–∫—É—Ä–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω–æ–π —Ñ–∞–∑–µ' : '–ú–µ—Ä–∫—É—Ä–∏–π –¥–≤–∏–∂–µ—Ç—Å—è –ø—Ä—è–º–æ, —Å–≤—è–∑–∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã'}. 
        
        –í–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–∞—Å:
        ${currentMonth === 0 ? 
          '‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∏ –≤ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞—Ö –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–µ\n‚Ä¢ –°–±–æ–∏ –≤ —Ç–µ—Ö–Ω–∏–∫–µ –∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö\n‚Ä¢ –í—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∞ –ø–ª–∞–Ω–æ–≤\n‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã –≤—Å—Ç—Ä–µ—á–∏ —Å –ª—é–¥—å–º–∏ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ' : 
          '‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π\n‚Ä¢ –£—Å–ø–µ—à–Ω—ã–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã\n‚Ä¢ –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω—ã'
        }
        
        üí° –°–æ–≤–µ—Ç –¥–Ω—è: ${currentMonth === 0 ? '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–≤–∞–∂–¥—ã' : '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è'}`,
        influence: currentMonth === 0 ? '–í—ã—Å–æ–∫–æ–µ' : '–°—Ä–µ–¥–Ω–µ–µ',
        affectedSigns: '–ë–ª–∏–∑–Ω–µ—Ü—ã, –î–µ–≤–∞ (—Å–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ), –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏ - —É–º–µ—Ä–µ–Ω–Ω–æ',
        realTime: true
      },
      {
        id: 2,
        planet: '–õ—É–Ω–∞',
        planetIcon: 'üåô',
        status: '–∞–∫—Ç–∏–≤–Ω—ã–π',
        title: `–õ—É–Ω–Ω–∞—è —Ñ–∞–∑–∞ —Å–µ–≥–æ–¥–Ω—è –≤–ª–∏—è–µ—Ç –Ω–∞ —ç–º–æ—Ü–∏–∏`,
        period: `${today.getDate()} ${today.toLocaleDateString('ru-RU', {month: 'long'})} 2025`,
        description: `üåô –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –ª—É–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è:
        
        –í–ª–∏—è–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å:
        ‚Ä¢ –ò–Ω—Ç—É–∏—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ —Ö–æ—Ä–æ—à–æ
        ‚Ä¢ ${currentDay % 2 === 0 ? '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π' : '–î–µ–Ω—å –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª'}
        ‚Ä¢ ${currentDay % 3 === 0 ? '–≠–º–æ—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤—ã–º–∏' : '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å'}
        ‚Ä¢ –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è
        
        ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: ${currentDay % 2 === 0 ? 
          '–ù–∞—á–∏–Ω–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —ç–Ω–µ—Ä–≥–∏—è —Ä–∞—Å—Ç—É—â–µ–π –ª—É–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –≤–∞—Å' : 
          '–ó–∞–≤–µ—Ä—à–∞–π—Ç–µ –Ω–∞—á–∞—Ç—ã–µ –¥–µ–ª–∞, –≤—Ä–µ–º—è —É–±—ã–≤–∞—é—â–µ–π –ª—É–Ω—ã –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å –≥–µ—à—Ç–∞–ª—å—Ç—ã'
        }`,
        influence: '–°—Ä–µ–¥–Ω–µ–µ',
        affectedSigns: '–†–∞–∫ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ), –°–∫–æ—Ä–ø–∏–æ–Ω, –†—ã–±—ã',
        realTime: true
      },
      {
        id: 3,
        planet: '–°–æ–ª–Ω—Ü–µ',
        planetIcon: '‚òÄÔ∏è',
        status: '–∞–∫—Ç–∏–≤–Ω—ã–π',
        title: `–°–æ–ª–Ω—Ü–µ –≤ –∑–Ω–∞–∫–µ ${getCurrentSunSign()}`,
        period: `${getCurrentSunPeriod()}`,
        description: `‚òÄÔ∏è –°–æ–ª–Ω–µ—á–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è —Å–µ–≥–æ–¥–Ω—è:
        
        –≠–Ω–µ—Ä–≥–∏—è –¥–Ω—è:
        ‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å
        ‚Ä¢ –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ª–∏–¥–µ—Ä—Å—Ç–≤–∞
        ‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–∞ –≤—ã—Å–æ—Ç–µ
        ‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ —Ä–∞—Å—Ç–µ—Ç
        
        üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è: –í–∞–∂–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤`,
        influence: '–°—Ä–µ–¥–Ω–µ–µ',
        affectedSigns: getCurrentSunSign() + ' (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ), –õ–µ–≤ (–≤—Å–µ–≥–¥–∞ —Å–≤—è–∑–∞–Ω —Å –°–æ–ª–Ω—Ü–µ–º)',
        realTime: true
      }
    ];
    
    return realEvents;
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–Ω–∞–∫ –°–æ–ª–Ω—Ü–∞
  const getCurrentSunSign = () => {
    const today = new Date();
    const month = today.getMonth() + 1;
    const day = today.getDate();
    
    if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return '–ö–æ–∑–µ—Ä–æ–≥';
    if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return '–í–æ–¥–æ–ª–µ–π';
    if ((month === 2 && day >= 19) || (month === 3 && day <= 20)) return '–†—ã–±—ã';
    if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return '–û–≤–µ–Ω';
    if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return '–¢–µ–ª–µ—Ü';
    if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return '–ë–ª–∏–∑–Ω–µ—Ü—ã';
    if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return '–†–∞–∫';
    if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return '–õ–µ–≤';
    if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return '–î–µ–≤–∞';
    if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return '–í–µ—Å—ã';
    if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return '–°–∫–æ—Ä–ø–∏–æ–Ω';
    if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return '–°—Ç—Ä–µ–ª–µ—Ü';
    
    return '–í–æ–¥–æ–ª–µ–π';
  };

  const getCurrentSunPeriod = () => {
    const sunSign = getCurrentSunSign();
    const periods = {
      '–ö–æ–∑–µ—Ä–æ–≥': '22 –¥–µ–∫–∞–±—Ä—è - 19 —è–Ω–≤–∞—Ä—è',
      '–í–æ–¥–æ–ª–µ–π': '20 —è–Ω–≤–∞—Ä—è - 18 —Ñ–µ–≤—Ä–∞–ª—è',
      '–†—ã–±—ã': '19 —Ñ–µ–≤—Ä–∞–ª—è - 20 –º–∞—Ä—Ç–∞',
      '–û–≤–µ–Ω': '21 –º–∞—Ä—Ç–∞ - 19 –∞–ø—Ä–µ–ª—è',
      '–¢–µ–ª–µ—Ü': '20 –∞–ø—Ä–µ–ª—è - 20 –º–∞—è',
      '–ë–ª–∏–∑–Ω–µ—Ü—ã': '21 –º–∞—è - 20 –∏—é–Ω—è',
      '–†–∞–∫': '21 –∏—é–Ω—è - 22 –∏—é–ª—è',
      '–õ–µ–≤': '23 –∏—é–ª—è - 22 –∞–≤–≥—É—Å—Ç–∞',
      '–î–µ–≤–∞': '23 –∞–≤–≥—É—Å—Ç–∞ - 22 —Å–µ–Ω—Ç—è–±—Ä—è',
      '–í–µ—Å—ã': '23 —Å–µ–Ω—Ç—è–±—Ä—è - 22 –æ–∫—Ç—è–±—Ä—è',
      '–°–∫–æ—Ä–ø–∏–æ–Ω': '23 –æ–∫—Ç—è–±—Ä—è - 21 –Ω–æ—è–±—Ä—è',
      '–°—Ç—Ä–µ–ª–µ—Ü': '22 –Ω–æ—è–±—Ä—è - 21 –¥–µ–∫–∞–±—Ä—è'
    };
    
    return periods[sunSign] || '–ü–µ—Ä–∏–æ–¥ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è';
  };

  // –°—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const eventsStyles = {
    container: {
      padding: theme.spacing.lg,
      maxWidth: '900px',
      margin: '0 auto',
      minHeight: 'calc(100vh - 120px)',
      position: 'relative'
    },

    header: {
      textAlign: 'center',
      marginBottom: theme.spacing.xl,
      position: 'relative'
    },

    headerCard: {
      background: createGradientStyle(['#667eea', '#764ba2'], '135deg').background,
      color: '#ffffff',
      textAlign: 'center',
      position: 'relative',
      overflow: 'hidden',
      padding: theme.spacing.xl
    },

    headerOverlay: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: 'rgba(0,0,0,0.1)',
      zIndex: 1
    },

    headerContent: {
      position: 'relative',
      zIndex: 2
    },

    headerDecoration: {
      position: 'absolute',
      top: '-50px',
      right: '-50px',
      fontSize: '150px',
      opacity: 0.1,
      zIndex: 1
    },

    title: {
      ...styles.heading,
      fontSize: theme.typography.sizes.title,
      margin: '0 0 8px 0',
      fontWeight: theme.typography.weights.bold,
      textShadow: '2px 2px 4px rgba(0,0,0,0.5)'
    },

    date: {
      fontSize: theme.typography.sizes.md,
      margin: 0,
      opacity: 0.9,
      textShadow: '1px 1px 2px rgba(0,0,0,0.5)'
    },

    updateBadge: {
      marginTop: theme.spacing.sm,
      padding: `${theme.spacing.xs} ${theme.spacing.md}`,
      background: 'rgba(255,255,255,0.2)',
      borderRadius: theme.borderRadius.xl,
      display: 'inline-block',
      fontSize: theme.typography.sizes.xs,
      fontWeight: theme.typography.weights.semibold,
      textShadow: '1px 1px 2px rgba(0,0,0,0.5)'
    },

    eventCard: {
      marginBottom: theme.spacing.lg,
      transition: `all ${theme.animations.duration.normal} ease`,
      position: 'relative'
    },

    eventHeader: {
      display: 'flex',
      alignItems: 'center',
      marginBottom: theme.spacing.md
    },

    planetIcon: {
      fontSize: '2.5rem',
      marginRight: theme.spacing.md,
      filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'
    },

    eventInfo: {
      flex: 1
    },

    eventTitle: {
      ...styles.heading,
      fontSize: theme.typography.sizes.lg,
      margin: '0 0 8px 0',
      color: theme.colors.text
    },

    statusBadge: {
      display: 'inline-block',
      padding: `${theme.spacing.xs} ${theme.spacing.sm}`,
      borderRadius: theme.borderRadius.lg,
      fontSize: theme.typography.sizes.xs,
      fontWeight: theme.typography.weights.semibold,
      textTransform: 'uppercase',
      letterSpacing: '0.5px'
    },

    eventPeriod: {
      fontSize: theme.typography.sizes.sm,
      color: theme.colors.textSecondary,
      marginBottom: theme.spacing.md,
      fontStyle: 'italic'
    },

    eventDescription: {
      fontSize: theme.typography.sizes.sm,
      lineHeight: 1.6,
      color: theme.colors.text,
      marginBottom: theme.spacing.lg,
      whiteSpace: 'pre-line'
    },

    eventFooter: {
      display: 'flex',
      flexWrap: 'wrap',
      gap: theme.spacing.sm,
      alignItems: 'center',
      justifyContent: 'space-between'
    },

    influenceBadge: {
      padding: `${theme.spacing.xs} ${theme.spacing.sm}`,
      borderRadius: theme.borderRadius.xl,
      fontSize: theme.typography.sizes.xs,
      fontWeight: theme.typography.weights.bold,
      border: '2px solid'
    },

    loadingContainer: {
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      padding: theme.spacing.xxl,
      textAlign: 'center'
    },

    loadingIcon: {
      fontSize: '4rem',
      marginBottom: theme.spacing.lg,
      animation: 'pulse 2s infinite'
    }
  };

  // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
  useEffect(() => {
    if (typeof document !== 'undefined') {
      const existingStyle = document.getElementById('astro-events-animations');
      if (!existingStyle) {
        const style = document.createElement('style');
        style.id = 'astro-events-animations';
        style.textContent = `
          @keyframes pulse {
            0%, 100% { 
              opacity: 0.6; 
              transform: scale(1); 
            }
            50% { 
              opacity: 1; 
              transform: scale(1.1); 
            }
          }
          
          @keyframes slideInUp {
            0% { 
              opacity: 0; 
              transform: translateY(20px); 
            }
            100% { 
              opacity: 1; 
              transform: translateY(0); 
            }
          }
        `;
        document.head.appendChild(style);
      }
    }
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  useEffect(() => {
    const loadEvents = async () => {
      setLoading(true);
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      const astroEvents = getCurrentAstroEvents();
      setEvents(astroEvents);
      setSelectedEvent(astroEvents[0]);
      
      setLoading(false);
    };

    loadEvents();
  }, []);

  // –¶–≤–µ—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const getEventStatusColor = (status) => {
    switch (status) {
      case '—Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥': return '#FF6B6B';
      case '–∞–∫—Ç–∏–≤–Ω—ã–π': return '#4ECDC4';
      case '–ø–µ—Ä–µ—Ö–æ–¥': return '#FFA726';
      default: return theme.colors.textSecondary;
    }
  };

  const getInfluenceColor = (level) => {
    switch (level) {
      case '–í—ã—Å–æ–∫–æ–µ': return '#FF5722';
      case '–°—Ä–µ–¥–Ω–µ–µ': return '#FF9800';
      case '–ù–∏–∑–∫–æ–µ': return '#4CAF50';
      default: return theme.colors.textSecondary;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const handleAddToFavorites = (event) => {
    if (onAddToFavorites) {
      onAddToFavorites({
        type: 'astro-event',
        id: event.id,
        title: event.title,
        content: event.description,
        date: new Date().toLocaleDateString(),
        planet: event.planet,
        planetIcon: event.planetIcon
      });
    }

    // Haptic feedback –¥–ª—è Telegram
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (window.Telegram?.WebApp?.showAlert) {
      window.Telegram.WebApp.showAlert(`${event.planet} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ! ‚≠ê`);
    }
  };

  if (loading) {
    return (
      <div style={eventsStyles.container}>

        
        <div style={eventsStyles.loadingContainer}>
          <div style={eventsStyles.loadingIcon}>üåå</div>
          <h3 style={{ color: theme.colors.primary, marginBottom: theme.spacing.sm }}>
            –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ—Å–º–æ—Å—É...
          </h3>
          <p style={{ color: theme.colors.textSecondary }}>
            –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
          </p>
        </div>
      </div>
    );
  }

  return (
    <div style={eventsStyles.container}>

      
      {/* –ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π */}
      <Card 
        variant="gradient" 
        padding="none" 
        style={{ 
          marginBottom: theme.spacing.xl,
          animation: 'slideInUp 0.6s ease-out'
        }}
      >
        <div style={eventsStyles.headerCard}>
          <div style={eventsStyles.headerOverlay} />
          <div style={eventsStyles.headerDecoration}>üåå</div>
          
          <div style={eventsStyles.headerContent}>
            <h1 style={eventsStyles.title}>
              –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –°–æ–±—ã—Ç–∏—è
            </h1>
            <p style={eventsStyles.date}>
              üìÖ {new Date().toLocaleDateString('ru-RU', { 
                weekday: 'long',
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </p>
            <div style={eventsStyles.updateBadge}>
              üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ–π—á–∞—Å
            </div>
          </div>
        </div>
      </Card>

      {/* –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ */}
      {events.map((event, index) => (
        <Card 
          key={event.id} 
          padding="lg"
          hoverable
          style={{
            ...eventsStyles.eventCard,
            animation: `slideInUp 0.6s ease-out ${index * 0.2}s`,
            animationFillMode: 'both'
          }}
        >
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è */}
          <div style={eventsStyles.eventHeader}>
            <span style={eventsStyles.planetIcon}>
              {event.planetIcon}
            </span>
            <div style={eventsStyles.eventInfo}>
              <h3 style={eventsStyles.eventTitle}>
                {event.title}
              </h3>
              <div
                style={{
                  ...eventsStyles.statusBadge,
                  background: `${getEventStatusColor(event.status)}20`,
                  color: getEventStatusColor(event.status),
                  border: `1px solid ${getEventStatusColor(event.status)}40`
                }}
              >
                {event.status} ‚Ä¢ {event.realTime ? '–ê–ö–¢–£–ê–õ–¨–ù–û' : '–ê–†–•–ò–í'}
              </div>
            </div>
          </div>

          {/* –ü–µ—Ä–∏–æ–¥ */}
          <div style={eventsStyles.eventPeriod}>
            üìÖ {event.period}
          </div>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
          <div style={eventsStyles.eventDescription}>
            {event.description}
          </div>

          {/* –ü–æ–¥–≤–∞–ª —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
          <div style={eventsStyles.eventFooter}>
            <div
              style={{
                ...eventsStyles.influenceBadge,
                background: `${getInfluenceColor(event.influence)}20`,
                color: getInfluenceColor(event.influence),
                borderColor: `${getInfluenceColor(event.influence)}40`
              }}
            >
              –í–ª–∏—è–Ω–∏–µ: {event.influence}
            </div>
            
            <Button
              variant="primary"
              size="sm"
              icon="‚≠ê"
              onClick={() => handleAddToFavorites(event)}
            >
              –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            </Button>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          {event.affectedSigns && (
            <div style={{
              marginTop: theme.spacing.md,
              padding: theme.spacing.sm,
              backgroundColor: `${theme.colors.primary}10`,
              borderRadius: theme.borderRadius.sm,
              borderLeft: `3px solid ${theme.colors.primary}`
            }}>
              <div style={{
                fontSize: theme.typography.sizes.xs,
                color: theme.colors.textSecondary,
                marginBottom: theme.spacing.xs
              }}>
                –û—Å–æ–±–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∑–Ω–∞–∫–∏:
              </div>
              <div style={{
                fontSize: theme.typography.sizes.sm,
                color: theme.colors.text
              }}>
                {event.affectedSigns}
              </div>
            </div>
          )}
        </Card>
      ))}

      {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
      <div style={{ textAlign: 'center', marginTop: theme.spacing.xl }}>
        <Button 
          variant="outline" 
          onClick={() => window.location.reload()}
          icon="üîÑ"
        >
          –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏—è
        </Button>
      </div>
    </div>
  );
};

export default AstroEventsView;
