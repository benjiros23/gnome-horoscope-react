// src/components/CompatibilityView.js
import React, { useState, useEffect } from 'react';
import { useTheme } from '../contexts/ThemeContext';
import { useCompatibility } from '../hooks/useAstrologyData';
import Card from './UI/Card';
import Button from './UI/Button';


const CompatibilityView = ({ 
  onBack, 
  onAddToFavorites, 
  selectedSign = null 
}) => {
  const { theme, styles, createGradientStyle } = useTheme();
  const [firstSign, setFirstSign] = useState(selectedSign?.sign || '–û–≤–µ–Ω');
  const [secondSign, setSecondSign] = useState('–õ–µ–≤');
  const [showResults, setShowResults] = useState(false);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  const { data: compatibilityData, loading, error, refetch } = useCompatibility(firstSign, secondSign);

  // –°–ø–∏—Å–æ–∫ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞
  const zodiacSigns = [
    '–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–†–∞–∫', '–õ–µ–≤', '–î–µ–≤–∞',
    '–í–µ—Å—ã', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–í–æ–¥–æ–ª–µ–π', '–†—ã–±—ã'
  ];

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞–∫–æ–≤
  useEffect(() => {
    if (showResults && firstSign && secondSign) {
      refetch();
    }
  }, [firstSign, secondSign, showResults, refetch]);

  // –°—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const compatibilityStyles = {
    container: {
      padding: theme.spacing.lg,
      maxWidth: '800px',
      margin: '0 auto',
      height: '100vh',
      overflowY: 'auto',
      paddingBottom: '100px'
    },

    header: {
      textAlign: 'center',
      marginBottom: theme.spacing.xl
    },

    title: {
      fontSize: theme.typography.sizes.title,
      fontWeight: theme.typography.weights.bold,
      color: theme.colors.text,
      marginBottom: theme.spacing.sm
    },

    subtitle: {
      fontSize: theme.typography.sizes.md,
      color: theme.colors.textSecondary,
      margin: 0
    },

    selectorCard: {
      marginBottom: theme.spacing.xl
    },

    selectorRow: {
      display: 'grid',
      gridTemplateColumns: '1fr auto 1fr',
      gap: theme.spacing.md,
      alignItems: 'center',
      marginBottom: theme.spacing.lg
    },

    selectWrapper: {
      position: 'relative'
    },

    select: {
      width: '100%',
      padding: theme.spacing.md,
      borderRadius: theme.borderRadius.md,
      border: `2px solid ${theme.colors.border}`,
      backgroundColor: theme.colors.surface,
      color: theme.colors.text,
      fontSize: theme.typography.sizes.md,
      cursor: 'pointer',
      outline: 'none',
      appearance: 'none',
      backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23${theme.colors.text.substring(1)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e")`,
      backgroundPosition: 'right 12px center',
      backgroundRepeat: 'no-repeat',
      backgroundSize: '16px',
      paddingRight: '40px'
    },

    heartIcon: {
      fontSize: '2rem',
      color: theme.colors.primary,
      animation: 'heartbeat 1.5s ease-in-out infinite'
    },

    checkButton: {
      width: '100%',
      marginTop: theme.spacing.lg
    },

    resultsCard: {
      marginBottom: theme.spacing.lg,
      background: createGradientStyle([theme.colors.primary, theme.colors.secondary], '135deg').background,
      position: 'relative',
      overflow: 'hidden'
    },

    resultsOverlay: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: 'rgba(0,0,0,0.2)',
      zIndex: 1
    },

    resultsContent: {
      position: 'relative',
      zIndex: 2,
      color: '#ffffff'
    },

    scoreContainer: {
      textAlign: 'center',
      marginBottom: theme.spacing.lg
    },

    score: {
      fontSize: '4rem',
      fontWeight: theme.typography.weights.bold,
      margin: 0,
      textShadow: '2px 2px 4px rgba(0,0,0,0.5)'
    },

    scoreLabel: {
      fontSize: theme.typography.sizes.lg,
      margin: 0,
      textShadow: '1px 1px 2px rgba(0,0,0,0.5)'
    },

    description: {
      fontSize: theme.typography.sizes.md,
      lineHeight: 1.6,
      textAlign: 'center',
      margin: 0,
      textShadow: '1px 1px 2px rgba(0,0,0,0.5)'
    },

    sectionCard: {
      marginBottom: theme.spacing.lg
    },

    sectionTitle: {
      fontSize: theme.typography.sizes.lg,
      fontWeight: theme.typography.weights.bold,
      color: theme.colors.text,
      marginBottom: theme.spacing.md,
      display: 'flex',
      alignItems: 'center',
      gap: theme.spacing.xs
    },

    listItem: {
      display: 'flex',
      alignItems: 'flex-start',
      gap: theme.spacing.sm,
      marginBottom: theme.spacing.sm,
      padding: theme.spacing.sm,
      backgroundColor: `${theme.colors.primary}10`,
      borderRadius: theme.borderRadius.sm,
      border: `1px solid ${theme.colors.primary}20`
    },

    loadingContainer: {
      textAlign: 'center',
      padding: theme.spacing.xxl
    },

    loadingIcon: {
      fontSize: '4rem',
      marginBottom: theme.spacing.lg,
      animation: 'pulse 2s infinite'
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  const handleCheckCompatibility = () => {
    setShowResults(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const handleAddToFavorites = () => {
    if (compatibilityData && onAddToFavorites) {
      const favoriteItem = {
        type: 'compatibility',
        id: `compatibility-${firstSign}-${secondSign}-${Date.now()}`,
        title: `üíï ${firstSign} –∏ ${secondSign}`,
        content: `–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${compatibilityData.score}%`,
        date: new Date().toLocaleDateString('ru-RU'),
        score: compatibilityData.score,
        description: compatibilityData.description,
        signs: `${firstSign} + ${secondSign}`
      };

      onAddToFavorites(favoriteItem);

      // Haptic feedback
      if (window.Telegram?.WebApp?.HapticFeedback) {
        window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
      }
    }
  };

  // CSS –∞–Ω–∏–º–∞—Ü–∏–∏
  useEffect(() => {
    const style = document.createElement('style');
    style.textContent = `
      @keyframes heartbeat {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.2); }
      }
      
      @keyframes pulse {
        0%, 100% { opacity: 0.6; transform: scale(1); }
        50% { opacity: 1; transform: scale(1.1); }
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      document.head.removeChild(style);
    };
  }, []);

  return (
    <div style={compatibilityStyles.container}>

      
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={compatibilityStyles.header}>
        <h1 style={compatibilityStyles.title}>üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤</h1>
        <p style={compatibilityStyles.subtitle}>
          –£–∑–Ω–∞–π—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É
        </p>
      </div>

      {/* –°–µ–ª–µ–∫—Ç–æ—Ä –∑–Ω–∞–∫–æ–≤ */}
      <Card padding="lg" style={compatibilityStyles.selectorCard}>
        <div style={compatibilityStyles.selectorRow}>
          
          {/* –ü–µ—Ä–≤—ã–π –∑–Ω–∞–∫ */}
          <div style={compatibilityStyles.selectWrapper}>
            <select
              style={compatibilityStyles.select}
              value={firstSign}
              onChange={(e) => setFirstSign(e.target.value)}
            >
              {zodiacSigns.map(sign => (
                <option key={sign} value={sign}>{sign}</option>
              ))}
            </select>
          </div>

          {/* –ò–∫–æ–Ω–∫–∞ —Å–µ—Ä–¥—Ü–∞ */}
          <div style={compatibilityStyles.heartIcon}>üíñ</div>

          {/* –í—Ç–æ—Ä–æ–π –∑–Ω–∞–∫ */}
          <div style={compatibilityStyles.selectWrapper}>
            <select
              style={compatibilityStyles.select}
              value={secondSign}
              onChange={(e) => setSecondSign(e.target.value)}
            >
              {zodiacSigns.map(sign => (
                <option key={sign} value={sign}>{sign}</option>
              ))}
            </select>
          </div>
        </div>

        <Button
          variant="primary"
          onClick={handleCheckCompatibility}
          style={compatibilityStyles.checkButton}
          disabled={loading}
        >
          {loading ? 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...' : 'üí´ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å'}
        </Button>
      </Card>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      {showResults && (
        <>
          {loading && (
            <div style={compatibilityStyles.loadingContainer}>
              <div style={compatibilityStyles.loadingIcon}>üíï</div>
              <h3 style={{ color: theme.colors.primary }}>
                –ó–≤–µ–∑–¥—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –≤–∞—à—É —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å...
              </h3>
            </div>
          )}

          {error && (
            <Card padding="lg" style={compatibilityStyles.sectionCard}>
              <h3 style={{ color: theme.colors.danger, textAlign: 'center' }}>
                –û—à–∏–±–∫–∞: {error}
              </h3>
            </Card>
          )}

          {compatibilityData && !loading && (
            <>
              {/* –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
              <Card padding="xl" style={compatibilityStyles.resultsCard}>
                <div style={compatibilityStyles.resultsOverlay} />
                <div style={compatibilityStyles.resultsContent}>
                  
                  <div style={compatibilityStyles.scoreContainer}>
                    <div style={compatibilityStyles.score}>
                      {compatibilityData.score}%
                    </div>
                    <div style={compatibilityStyles.scoreLabel}>
                      –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
                    </div>
                  </div>

                  <p style={compatibilityStyles.description}>
                    {compatibilityData.description}
                  </p>
                </div>
              </Card>

              {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
              <Card padding="lg" style={compatibilityStyles.sectionCard}>
                <h3 style={compatibilityStyles.sectionTitle}>
                  <span>üí™</span>
                  <span>–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</span>
                </h3>
                
                {compatibilityData.strengths?.map((strength, index) => (
                  <div key={index} style={compatibilityStyles.listItem}>
                    <span style={{ color: theme.colors.success, fontSize: '16px' }}>‚úÖ</span>
                    <span>{strength}</span>
                  </div>
                ))}
              </Card>

              {/* –í—ã–∑–æ–≤—ã */}
              <Card padding="lg" style={compatibilityStyles.sectionCard}>
                <h3 style={compatibilityStyles.sectionTitle}>
                  <span>‚ö†Ô∏è</span>
                  <span>–ù–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ</span>
                </h3>
                
                {compatibilityData.challenges?.map((challenge, index) => (
                  <div key={index} style={compatibilityStyles.listItem}>
                    <span style={{ color: theme.colors.warning, fontSize: '16px' }}>‚ö°</span>
                    <span>{challenge}</span>
                  </div>
                ))}
              </Card>

              {/* –°–æ–≤–µ—Ç—ã */}
              {compatibilityData.advice && (
                <Card padding="lg" style={compatibilityStyles.sectionCard}>
                  <h3 style={compatibilityStyles.sectionTitle}>
                    <span>üí°</span>
                    <span>–°–æ–≤–µ—Ç –æ—Ç –∑–≤–µ–∑–¥</span>
                  </h3>
                  
                  <div style={{
                    padding: theme.spacing.md,
                    backgroundColor: `${theme.colors.secondary}15`,
                    borderRadius: theme.borderRadius.md,
                    borderLeft: `4px solid ${theme.colors.secondary}`,
                    fontStyle: 'italic',
                    lineHeight: 1.6
                  }}>
                    {compatibilityData.advice}
                  </div>
                </Card>
              )}

              {/* –î–µ–π—Å—Ç–≤–∏—è */}
              <div style={{ 
                display: 'flex',
                gap: theme.spacing.md,
                justifyContent: 'center',
                marginTop: theme.spacing.xl
              }}>
                <Button variant="primary" onClick={handleAddToFavorites}>
                  ‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                </Button>
                
                <Button variant="outline" onClick={() => refetch()}>
                  üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å
                </Button>
              </div>
            </>
          )}
        </>
      )}
    </div>
  );
};

export default CompatibilityView;
