import React, { useState, useEffect } from 'react';
import useAPI from '../hooks/useAPI';
import './MoonView.css';

const MoonView = () => {
  const [moonData, setMoonData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const { getMoonData } = useAPI();

  useEffect(() => {
    const fetchMoonData = async () => {
      try {
        setLoading(true);
        setError(null);
        const data = await getMoonData();
        setMoonData(data);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª—É–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
      } finally {
        setLoading(false);
      }
    };

    fetchMoonData();
  }, [getMoonData]);

  if (loading) {
    return (
      <div className="moon-view">
        <div className="loading-moon">
          <div className="moon-spinner">üåô</div>
          <p>–ì–Ω–æ–º—ã –∏–∑—É—á–∞—é—Ç –ª—É–Ω–Ω—ã–µ —Ñ–∞–∑—ã...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="moon-view">
        <div className="error-moon">
          <h3>üîÆ –õ—É–Ω–Ω–∞—è –º–∞–≥–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
          <p>{error}</p>
          <button 
            onClick={() => window.location.reload()}
            className="retry-button"
          >
            üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (!moonData || !moonData.current) {
    return (
      <div className="moon-view">
        <div className="no-data">
          <p>üìÖ –õ—É–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>
        </div>
      </div>
    );
  }

  const { current, calendar } = moonData;

  return (
    <div className="moon-view">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="moon-header">
        <h2>üåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h2>
        <p className="moon-subtitle">–ú—É–¥—Ä–æ—Å—Ç—å –¥—Ä–µ–≤–Ω–∏—Ö –≥–Ω–æ–º–æ–≤ –æ —Å–∏–ª–µ –õ—É–Ω—ã</p>
      </div>

      {/* –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –õ—É–Ω—ã */}
      <div className="current-moon">
        <div className="moon-phase-display">
          <div className="moon-icon" style={{ fontSize: '64px' }}>
            {current.emoji || 'üåô'}
          </div>
          <div className="moon-info">
            <h3>{current.phase || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ–∞–∑–∞'}</h3>
            <div className="moon-details">
              <div className="moon-stat">
                <span className="label">–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å:</span>
                <span className="value">{current.illumination || 0}%</span>
              </div>
              <div className="moon-stat">
                <span className="label">–í–æ–∑—Ä–∞—Å—Ç:</span>
                <span className="value">{current.age || 1} –¥–Ω–µ–π</span>
              </div>
              {current.zodiacSign && (
                <div className="moon-stat">
                  <span className="label">–í –∑–Ω–∞–∫–µ:</span>
                  <span className="value">{current.zodiacSign}</span>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* –í—Ä–µ–º–µ–Ω–∞ –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞—Ö–æ–¥–∞ */}
        {(current.moonrise || current.moonset) && (
          <div className="moon-times">
            {current.moonrise && (
              <div className="moon-time">
                <span className="time-icon">üåÖ</span>
                <span>–í–æ—Å—Ö–æ–¥: {current.moonrise}</span>
              </div>
            )}
            {current.moonset && (
              <div className="moon-time">
                <span className="time-icon">üåá</span>
                <span>–ó–∞—Ö–æ–¥: {current.moonset}</span>
              </div>
            )}
          </div>
        )}
      </div>

      {/* –°–æ–≤–µ—Ç—ã –ø–æ –ª—É–Ω–Ω–æ–π —Ñ–∞–∑–µ */}
      {current.advice && (
        <div className="moon-advice">
          <h4>{current.advice.title}</h4>
          <p>{current.advice.text}</p>
          
          {current.advice.activities && current.advice.activities.length > 0 && (
            <div className="advice-section">
              <strong>‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:</strong>
              <ul>
                {current.advice.activities.map((activity, index) => (
                  <li key={index}>{activity}</li>
                ))}
              </ul>
            </div>
          )}
          
          {current.advice.avoid && current.advice.avoid.length > 0 && (
            <div className="advice-section">
              <strong>‚ùå –ò–∑–±–µ–≥–∞–π—Ç–µ:</strong>
              <ul>
                {current.advice.avoid.map((item, index) => (
                  <li key={index}>{item}</li>
                ))}
              </ul>
            </div>
          )}
        </div>
      )}

      {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –Ω–µ–¥–µ–ª—é */}
      {calendar && calendar.length > 0 && (
        <div className="moon-calendar">
          <h4>üìÖ –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –Ω–µ–¥–µ–ª—é</h4>
          <div className="calendar-grid">
            {calendar.map((day, index) => (
              <div 
                key={index} 
                className={`calendar-day ${index === 0 ? 'today' : ''}`}
              >
                <div className="day-date">{day.displayDate}</div>
                <div className="day-phase">
                  <span className="phase-emoji">{day.emoji || 'üåô'}</span>
                  <span className="phase-name">{day.phase}</span>
                </div>
                <div className="day-illumination">{day.illumination || 0}%</div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ */}
      <div className="moon-footer">
        <p>üßô‚Äç‚ôÇÔ∏è –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ì–Ω–æ–º—å–µ–π –û–±—Å–µ—Ä–≤–∞—Ç–æ—Ä–∏–µ–π</p>
        {moonData.lastUpdated && (
          <small>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(moonData.lastUpdated).toLocaleString('ru-RU')}</small>
        )}
      </div>
    </div>
  );
};

export default MoonView;
