// src/components/Header.js - –ó–≤–µ–∑–¥–Ω—ã–π –ø–∞—Ä–∞–ª–ª–∞–∫—Å —Ö–µ–¥–µ—Ä
import React, { useState, useEffect, useRef } from 'react';
import { useTheme } from '../contexts/ThemeContext';

const Header = ({ 
  title = "üîÆ –ê—Å—Ç—Ä–æ –ì–Ω–æ–º", 
  showMenuButton = true,
  onMenuToggle,
  showBackButton = false, 
  onBack 
}) => {
  const { theme } = useTheme();
  const headerRef = useRef(null);
  const [scrollY, setScrollY] = useState(0);
  const [stars, setStars] = useState([]);
  const [isMobile, setIsMobile] = useState(window.innerWidth <= 480); // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–≤–µ–∑–¥—ã –¥–ª—è –ø–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç–∞
  useEffect(() => {
    const generateStars = () => {
      const starArray = [];
      for (let i = 0; i < 50; i++) {
        starArray.push({
          id: i,
          x: Math.random() * 100,
          y: Math.random() * 100,
          size: Math.random() * 3 + 1,
          opacity: Math.random() * 0.8 + 0.2,
          speed: Math.random() * 0.5 + 0.1
        });
      }
      setStars(starArray);
    };

    generateStars();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è –ø–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç–∞
  useEffect(() => {
    const handleScroll = () => {
      setScrollY(window.scrollY);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 480);
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // CSS –∞–Ω–∏–º–∞—Ü–∏–∏
  useEffect(() => {
    const style = document.createElement('style');
    style.textContent = `
      @keyframes starTwinkle {
        0%, 100% { opacity: 0.2; transform: scale(1); }
        50% { opacity: 1; transform: scale(1.2); }
      }
      
      @keyframes floatPlanet {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-10px) rotate(180deg); }
      }
      
      @keyframes cosmicGlow {
        0%, 100% { box-shadow: 0 0 20px rgba(244, 197, 66, 0.3); }
        50% { box-shadow: 0 0 40px rgba(244, 197, 66, 0.6), 0 0 60px rgba(78, 205, 196, 0.3); }
      }
      
      @keyframes titlePulse {
        0%, 100% { text-shadow: 0 0 5px rgba(244, 197, 66, 0.5); }
        50% { text-shadow: 0 0 20px rgba(244, 197, 66, 0.8), 0 0 30px rgba(78, 205, 196, 0.4); }
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      if (document.head.contains(style)) {
        document.head.removeChild(style);
      }
    };
  }, []);

  const headerStyles = {
    container: {
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      height: '120px', // –£–≤–µ–ª–∏—á–∏–ª –≤—ã—Å–æ—Ç—É –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
      background: `linear-gradient(135deg, 
        rgba(22, 33, 62, 0.95) 0%, 
        rgba(42, 47, 78, 0.95) 50%, 
        rgba(16, 26, 50, 0.95) 100%)`,
      borderBottom: `2px solid rgba(244, 197, 66, 0.3)`,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      padding: `0 ${theme.spacing.lg}`,
      zIndex: 1000,
      backdropFilter: 'blur(25px)',
      boxShadow: `
        0 8px 32px rgba(0, 0, 0, 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.1)
      `,
      overflow: 'hidden',
      position: 'relative'
    },

    // –ü–∞—Ä–∞–ª–ª–∞–∫—Å —Å–ª–æ–∏
    parallaxLayer1: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: `radial-gradient(circle at 20% 30%, rgba(244, 197, 66, 0.1) 0%, transparent 50%),
                   radial-gradient(circle at 80% 70%, rgba(78, 205, 196, 0.1) 0%, transparent 50%)`,
      transform: `translateY(${scrollY * 0.3}px)`,
      transition: 'transform 0.1s ease-out'
    },

    parallaxLayer2: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      transform: `translateY(${scrollY * 0.5}px)`,
      transition: 'transform 0.1s ease-out'
    },

    // –ü–ª–∞–≤–∞—é—â–∏–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
    floatingSymbols: {
      position: 'absolute',
      top: '50%',
      left: '10%',
      transform: 'translateY(-50%)',
      fontSize: '24px',
      opacity: 0.3,
      animation: 'floatPlanet 6s ease-in-out infinite'
    },

    floatingSymbols2: {
      position: 'absolute',
      top: '30%',
      right: '15%',
      fontSize: '20px',
      opacity: 0.25,
      animation: 'floatPlanet 8s ease-in-out infinite reverse'
    },

    leftSection: {
      display: 'flex',
      alignItems: 'center',
      gap: theme.spacing.sm,
      minWidth: '80px',
      zIndex: 2
    },

    rightSection: {
      minWidth: '80px',
      display: 'flex',
      justifyContent: 'flex-end',
      zIndex: 2
    },

    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å cosmic —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
    menuButton: {
      backgroundColor: 'rgba(244, 197, 66, 0.1)',
      border: '2px solid rgba(244, 197, 66, 0.3)',
      color: theme.colors.primary,
      fontSize: '24px',
      cursor: 'pointer',
      padding: '12px',
      borderRadius: '50%',
      transition: 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      width: '50px',
      height: '50px',
      backdropFilter: 'blur(10px)',
      position: 'relative',
      overflow: 'hidden'
    },

    backButton: {
      backgroundColor: 'rgba(78, 205, 196, 0.1)',
      border: '2px solid rgba(78, 205, 196, 0.3)',
      color: '#4ECDC4',
      fontSize: '22px',
      cursor: 'pointer',
      padding: '12px',
      borderRadius: '50%',
      transition: 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      width: '50px',
      height: '50px',
      backdropFilter: 'blur(10px)',
      position: 'relative',
      overflow: 'hidden'
    },

    // –ú–∞–≥–∏—á–µ—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    titleContainer: {
      flex: 1,
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      zIndex: 2,
      position: 'relative',
      padding: `0 ${isMobile ? '10px' : '20px'}`, // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ–±—Ä–µ–∑–∫–∏
      minWidth: 0 // –ü–æ–∑–≤–æ–ª—è–µ–º flex —ç–ª–µ–º–µ–Ω—Ç—É —Å–∂–∏–º–∞—Ç—å—Å—è
    },

    title: {
      fontSize: isMobile ? '20px' : '28px', // –ú–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
      fontWeight: '800',
      background: `linear-gradient(135deg, 
        ${theme.colors.primary} 0%, 
        #4ECDC4 50%, 
        ${theme.colors.primary} 100%)`,
      backgroundClip: 'text',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      margin: 0,
      textAlign: 'center',
      animation: 'titlePulse 3s ease-in-out infinite',
      textShadow: 'none',
      letterSpacing: isMobile ? '0.5px' : '1px', // –ú–µ–Ω—å—à–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
      whiteSpace: 'nowrap', // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫
      overflow: 'hidden', // –ü—Ä—è—á–µ–º –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ
      textOverflow: 'ellipsis', // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–æ–µ—Ç–æ—á–∏–µ –ø—Ä–∏ –æ–±—Ä–µ–∑–∫–µ
      maxWidth: isMobile ? '200px' : '300px' // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É
    },

    subtitle: {
      fontSize: isMobile ? '10px' : '12px', // –ú–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
      color: 'rgba(255, 255, 255, 0.6)',
      marginTop: '4px',
      textAlign: 'center',
      fontWeight: '400',
      letterSpacing: isMobile ? '1px' : '2px', // –ú–µ–Ω—å—à–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
      textTransform: 'uppercase',
      whiteSpace: 'nowrap', // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫
      overflow: 'hidden', // –ü—Ä—è—á–µ–º –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ
      textOverflow: 'ellipsis', // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–æ–µ—Ç–æ—á–∏–µ –ø—Ä–∏ –æ–±—Ä–µ–∑–∫–µ
      maxWidth: isMobile ? '200px' : '300px' // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å Haptic feedback
  const handleMenuClick = () => {
    if (onMenuToggle) {
      onMenuToggle();
    }
    
    // Telegram haptic feedback
    const tg = window.Telegram?.WebApp;
    if (tg?.HapticFeedback && typeof tg.HapticFeedback.impactOccurred === 'function') {
      try {
        tg.HapticFeedback.impactOccurred('medium');
      } catch (e) {}
    }
  };

  const handleBackClick = () => {
    if (onBack) {
      onBack();
    }
    
    const tg = window.Telegram?.WebApp;
    if (tg?.HapticFeedback && typeof tg.HapticFeedback.impactOccurred === 'function') {
      try {
        tg.HapticFeedback.impactOccurred('light');
      } catch (e) {}
    }
  };

  return (
    <header ref={headerRef} style={headerStyles.container}>
      
      {/* –ü–∞—Ä–∞–ª–ª–∞–∫—Å —Å–ª–æ–π 1 */}
      <div style={headerStyles.parallaxLayer1} />
      
      {/* –ü–∞—Ä–∞–ª–ª–∞–∫—Å —Å–ª–æ–π 2 —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ */}
      <div style={headerStyles.parallaxLayer2}>
        {stars.map(star => (
          <div
            key={star.id}
            style={{
              position: 'absolute',
              left: `${star.x}%`,
              top: `${star.y}%`,
              width: `${star.size}px`,
              height: `${star.size}px`,
              backgroundColor: '#F4C542',
              borderRadius: '50%',
              opacity: star.opacity,
              animation: `starTwinkle ${2 + star.speed * 3}s ease-in-out infinite`,
              transform: `translateY(${scrollY * star.speed}px)`,
              boxShadow: `0 0 ${star.size * 2}px rgba(244, 197, 66, 0.8)`
            }}
          />
        ))}
      </div>

      {/* –ü–ª–∞–≤–∞—é—â–∏–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã */}
      <div style={headerStyles.floatingSymbols}>üåô</div>
      <div style={headerStyles.floatingSymbols2}>‚ú®</div>

      {/* –õ–µ–≤–∞—è —Å–µ–∫—Ü–∏—è */}
      <div style={headerStyles.leftSection}>
        {showMenuButton && (
          <button
            style={headerStyles.menuButton}
            onClick={handleMenuClick}
            onMouseEnter={(e) => {
              e.target.style.backgroundColor = 'rgba(244, 197, 66, 0.2)';
              e.target.style.transform = 'scale(1.1)';
              e.target.style.borderColor = 'rgba(244, 197, 66, 0.6)';
              e.target.style.animation = 'cosmicGlow 2s ease-in-out infinite';
            }}
            onMouseLeave={(e) => {
              e.target.style.backgroundColor = 'rgba(244, 197, 66, 0.1)';
              e.target.style.transform = 'scale(1)';
              e.target.style.borderColor = 'rgba(244, 197, 66, 0.3)';
              e.target.style.animation = 'none';
            }}
            title="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
          >
            ‚ò∞
          </button>
        )}
        
        {showBackButton && (
          <button
            style={headerStyles.backButton}
            onClick={handleBackClick}
            onMouseEnter={(e) => {
              e.target.style.backgroundColor = 'rgba(78, 205, 196, 0.2)';
              e.target.style.transform = 'scale(1.1)';
              e.target.style.borderColor = 'rgba(78, 205, 196, 0.6)';
              e.target.style.animation = 'cosmicGlow 2s ease-in-out infinite';
            }}
            onMouseLeave={(e) => {
              e.target.style.backgroundColor = 'rgba(78, 205, 196, 0.1)';
              e.target.style.transform = 'scale(1)';
              e.target.style.borderColor = 'rgba(78, 205, 196, 0.3)';
              e.target.style.animation = 'none';
            }}
            title="–ù–∞–∑–∞–¥"
          >
            ‚Üê
          </button>
        )}
      </div>

      {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ */}
      <div style={headerStyles.titleContainer}>
        <h1 style={headerStyles.title}>{title}</h1>
        <div style={headerStyles.subtitle}>–í–ê–®–ê –ó–í–ï–ó–î–ù–ê–Ø –°–£–î–¨–ë–ê</div>
      </div>
      
      {/* –ü—Ä–∞–≤–∞—è —Å–µ–∫—Ü–∏—è */}
      <div style={headerStyles.rightSection}>
        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π cosmic –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        <div style={{
          width: '8px',
          height: '8px',
          backgroundColor: theme.colors.primary,
          borderRadius: '50%',
          animation: 'starTwinkle 2s ease-in-out infinite',
          boxShadow: `0 0 10px ${theme.colors.primary}`
        }} />
      </div>
    </header>
  );
};

export default Header;