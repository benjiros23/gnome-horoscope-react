import React, { useState, useEffect, useRef } from 'react';
import { useAPI } from '../hooks/useAPI';
import { saveToCache, loadFromCache } from '../utils/cache';

function NumerologyView({ onBack, onAddToFavorites, telegramApp }) {
  const { calculateNumerology, loading, error, clearError } = useAPI();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [birthDate, setBirthDate] = useState('');
  const [numerologyResult, setNumerologyResult] = useState(null);
  const [isCalculating, setIsCalculating] = useState(false);
  const [showResult, setShowResult] = useState(false);
  const [animateNumbers, setAnimateNumbers] = useState(false);
  const [showDetails, setShowDetails] = useState(false);
  
  const resultRef = useRef(null);
  const hasCalculatedRef = useRef(false);

  // Haptic feedback
  const hapticFeedback = (type = 'impact', style = 'medium') => {
    if (telegramApp?.HapticFeedback) {
      try {
        if (type === 'impact') {
          telegramApp.HapticFeedback.impactOccurred(style);
        } else if (type === 'selection') {
          telegramApp.HapticFeedback.selectionChanged();
        } else if (type === 'notification') {
          telegramApp.HapticFeedback.notificationOccurred(style);
        }
      } catch (e) {
        console.log('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', e.message);
      }
    }
  };

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  const showToast = (message) => {
    if (telegramApp) {
      telegramApp.showAlert(message);
    } else {
      alert(message);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –¥–∞—Ç—É –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedDate = loadFromCache('user_birth_date');
    if (savedDate && savedDate.birthDate) {
      setBirthDate(savedDate.birthDate);
      console.log('üìÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è');
    }
  }, []);

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã
  const isValidDate = (dateString) => {
    if (!dateString) return false;
    const date = new Date(dateString);
    const now = new Date();
    const hundredYearsAgo = new Date(now.getFullYear() - 100, now.getMonth(), now.getDate());
    
    return date instanceof Date && 
           !isNaN(date) && 
           date <= now && 
           date >= hundredYearsAgo;
  };

  // –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é
  const handleCalculateNumerology = async () => {
    if (isCalculating || hasCalculatedRef.current) return;
    
    if (!isValidDate(birthDate)) {
      showToast('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è');
      hapticFeedback('notification', 'error');
      return;
    }
    
    try {
      setIsCalculating(true);
      hasCalculatedRef.current = true;
      clearError();
      
      console.log(`üî¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é –¥–ª—è –¥–∞—Ç—ã: ${birthDate}`);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
      saveToCache('user_birth_date', { birthDate, timestamp: Date.now() });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const cacheKey = `numerology_${birthDate}`;
      const cachedResult = loadFromCache(cacheKey);
      
      if (cachedResult) {
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏ –∏–∑ –∫–µ—à–∞');
        setNumerologyResult(cachedResult);
        setShowResult(true);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–µ–ª
        setTimeout(() => setAnimateNumbers(true), 500);
        setTimeout(() => setShowDetails(true), 1000);
        
        hapticFeedback('notification', 'success');
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å API
      const result = await calculateNumerology(birthDate);
      
      // –î–æ–ø–æ–ª–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏
      const enhancedResult = {
        ...result,
        ...calculateDetailedNumerology(birthDate),
        timestamp: Date.now()
      };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
      saveToCache(cacheKey, enhancedResult);
      
      setNumerologyResult(enhancedResult);
      setShowResult(true);
      
      // –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–µ–ª
      setTimeout(() => setAnimateNumbers(true), 500);
      setTimeout(() => setShowDetails(true), 1000);
      
      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
      setTimeout(() => {
        if (resultRef.current) {
          resultRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }, 200);
      
      hapticFeedback('notification', 'success');
      console.log('‚úÖ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞:', enhancedResult);
      
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏:', err);
      hapticFeedback('notification', 'error');
      showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏');
    } finally {
      setIsCalculating(false);
    }
  };

  // –î–µ—Ç–∞–ª—å–Ω—ã–µ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
  const calculateDetailedNumerology = (dateString) => {
    const date = new Date(dateString);
    const day = date.getDate();
    const month = date.getMonth() + 1;
    const year = date.getFullYear();
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –∫ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–º—É —á–∏—Å–ª—É
    const reduceToSingle = (num) => {
      while (num > 9 && num !== 11 && num !== 22 && num !== 33) {
        num = num.toString().split('').reduce((sum, digit) => sum + parseInt(digit), 0);
      }
      return num;
    };
    
    // –ß–∏—Å–ª–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏
    const lifePathSum = day + month + year;
    const lifePath = reduceToSingle(lifePathSum);
    
    // –ß–∏—Å–ª–æ —Å—É–¥—å–±—ã (–ø–æ–ª–Ω–∞—è –¥–∞—Ç–∞)
    const destinySum = dateString.replace(/-/g, '').split('').reduce((sum, digit) => sum + parseInt(digit), 0);
    const destiny = reduceToSingle(destinySum);
    
    // –ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏ (–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)
    const personality = reduceToSingle(day);
    
    // –ß–∏—Å–ª–æ –¥—É—à–∏ (–º–µ—Å—è—Ü)  
    const soul = reduceToSingle(month);
    
    // –ß–∏—Å–ª–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–≥–æ–¥)
    const achievement = reduceToSingle(year);
    
    return {
      lifePath: { number: lifePath, strength: Math.min(95, 75 + Math.random() * 20) },
      destiny: { number: destiny, strength: Math.min(95, 70 + Math.random() * 25) },
      personality: { number: personality, strength: Math.min(95, 65 + Math.random() * 30) },
      soul: { number: soul, strength: Math.min(95, 60 + Math.random() * 35) },
      achievement: { number: achievement, strength: Math.min(95, 55 + Math.random() * 40) },
      birthDate: dateString,
      calculationType: 'enhanced'
    };
  };

  // –°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const handleReset = () => {
    setNumerologyResult(null);
    setShowResult(false);
    setAnimateNumbers(false);
    setShowDetails(false);
    hasCalculatedRef.current = false;
    hapticFeedback('impact', 'light');
  };

  // –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const handleAddToFavorites = () => {
    if (numerologyResult && onAddToFavorites) {
      const favoriteItem = {
        id: Date.now(),
        type: 'numerology',
        title: `üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è ${new Date(birthDate).toLocaleDateString('ru-RU')}`,
        content: `–ß–∏—Å–ª–æ –∂–∏–∑–Ω–∏: ${numerologyResult.lifePath?.number}, –°—É–¥—å–±–∞: ${numerologyResult.destiny?.number}`,
        date: new Date().toLocaleDateString('ru-RU'),
        source: numerologyResult.source || 'offline'
      };
      
      onAddToFavorites(favoriteItem);
      showToast('üí´ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
      hapticFeedback('impact', 'light');
    }
  };

  // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
  const handleShare = () => {
    if (numerologyResult && telegramApp) {
      const shareText = `üî¢ –ú–æ—è –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è:\nüìÖ –î–∞—Ç–∞: ${new Date(birthDate).toLocaleDateString('ru-RU')}\n\n‚ú® –ß–∏—Å–ª–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏: ${numerologyResult.lifePath?.number}\nüéØ –ß–∏—Å–ª–æ —Å—É–¥—å–±—ã: ${numerologyResult.destiny?.number}\nüë§ –ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏: ${numerologyResult.personality?.number}\n\nüßô‚Äç‚ôÇÔ∏è #–ì–Ω–æ–º–∏–π–ì–æ—Ä–æ—Å–∫–æ–ø #–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è`;
      
      telegramApp.sendData(JSON.stringify({
        action: 'share_numerology',
        birthDate: birthDate,
        lifePath: numerologyResult.lifePath?.number,
        destiny: numerologyResult.destiny?.number
      }));
      
      hapticFeedback('impact', 'medium');
    }
  };

  return (
    <div className="numerology-view content-enter">
      <div className="card">
        <div className="content-header">
          <h3 className="content-title">üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è</h3>
          <p className="content-subtitle">–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–π–Ω—ã —Å–≤–æ–∏—Ö —á–∏—Å–µ–ª —Å—É–¥—å–±—ã</p>
        </div>

        {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã */}
        {!showResult && (
          <div className="birth-date-form">
            <div className="form-header">
              <h4 className="form-title">üìÖ –í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</h4>
              <p className="form-subtitle">–î—Ä–µ–≤–Ω–∏–µ –≥–Ω–æ–º—ã-–º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —Ä–∞—Å–∫—Ä–æ—é—Ç —Ç–∞–π–Ω—ã –≤–∞—à–∏—Ö —á–∏—Å–µ–ª</p>
            </div>

            <div className="date-input-container">
              <div className="date-input-wrapper">
                <input
                  type="date"
                  value={birthDate}
                  onChange={(e) => setBirthDate(e.target.value)}
                  className="date-input"
                  max={new Date().toISOString().split('T')[0]}
                  min={new Date(new Date().getFullYear() - 100, 0, 1).toISOString().split('T')[0]}
                />
                <div className="date-input-icon">üéÇ</div>
              </div>
              
              {birthDate && isValidDate(birthDate) && (
                <div className="date-preview">
                  <span className="preview-label">–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞:</span>
                  <span className="preview-date">
                    {new Date(birthDate).toLocaleDateString('ru-RU', {
                      day: 'numeric',
                      month: 'long',
                      year: 'numeric'
                    })}
                  </span>
                </div>
              )}
            </div>

            <div className="calculate-section">
              <button 
                className={`btn-calculate ${isCalculating ? 'calculating' : ''}`}
                onClick={handleCalculateNumerology}
                disabled={isCalculating || !birthDate}
              >
                {isCalculating ? (
                  <>
                    <span className="loading-spinner"></span>
                    –ì–Ω–æ–º-–º–∞—Ç–µ–º–∞—Ç–∏–∫ –≤—ã—á–∏—Å–ª—è–µ—Ç...
                  </>
                ) : (
                  <>
                    <span className="calculate-icon">üßÆ</span>
                    –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é
                  </>
                )}
              </button>
              
              <p className="calculate-hint">
                üí° –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –¥—Ä–µ–≤–Ω–∏—Ö –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–∞—Ö –∏ –º—É–¥—Ä–æ—Å—Ç–∏ –≥–Ω–æ–º–æ–≤
              </p>
            </div>
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏ */}
        {showResult && numerologyResult && (
          <div ref={resultRef} className={`numerology-result ${animateNumbers ? 'animated' : ''}`}>
            {/* –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —á–∏—Å–ª–∞ */}
            <div className="magic-numbers">
              <div className="numbers-header">
                <h3 className="numbers-title">‚ú® –í–∞—à–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–µ —á–∏—Å–ª–∞</h3>
                <p className="birth-info">
                  üìÖ {new Date(birthDate).toLocaleDateString('ru-RU', {
                    day: 'numeric',
                    month: 'long',
                    year: 'numeric'
                  })}
                </p>
              </div>

              <div className="numbers-grid">
                <NumberCard
                  title="–ß–∏—Å–ª–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏"
                  number={numerologyResult.lifePath?.number}
                  strength={numerologyResult.lifePath?.strength}
                  icon="üåü"
                  primary={true}
                  animated={animateNumbers}
                />
                <NumberCard
                  title="–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã"
                  number={numerologyResult.destiny?.number}
                  strength={numerologyResult.destiny?.strength}
                  icon="üéØ"
                  animated={animateNumbers}
                />
                <NumberCard
                  title="–ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏"
                  number={numerologyResult.personality?.number}
                  strength={numerologyResult.personality?.strength}
                  icon="üë§"
                  animated={animateNumbers}
                />
                <NumberCard
                  title="–ß–∏—Å–ª–æ –¥—É—à–∏"
                  number={numerologyResult.soul?.number}
                  strength={numerologyResult.soul?.strength}
                  icon="üí´"
                  animated={animateNumbers}
                />
              </div>
            </div>

            {/* –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ */}
            {showDetails && (
              <div className="numerology-details">
                <NumerologyDescription 
                  number={numerologyResult.lifePath?.number}
                  type="lifePath"
                  birthDate={birthDate}
                />
              </div>
            )}

            {/* –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö */}
            <div className="result-source">
              {numerologyResult.source === 'offline' ? (
                <span className="source-badge offline">üì± –†–∞—Å—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</span>
              ) : (
                <span className="source-badge online">üåê –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</span>
              )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="result-actions">
              <button 
                className="btn-favorite" 
                onClick={handleAddToFavorites}
                title="–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
              >
                üí´ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
              </button>
              
              {telegramApp && (
                <button 
                  className="btn-primary" 
                  onClick={handleShare}
                  title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"
                >
                  üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                </button>
              )}
              
              <button 
                className="btn-secondary" 
                onClick={handleReset}
                title="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–ª—è –¥—Ä—É–≥–æ–π –¥–∞—Ç—ã"
              >
                üîÑ –ï—â–µ —Ä–∞–∑
              </button>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <div className="action-buttons">
          <button className="btn-secondary" onClick={onBack}>
            ‚Üê –ù–∞–∑–∞–¥
          </button>
        </div>
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —á–∏—Å–ª–∞
function NumberCard({ title, number, strength, icon, primary = false, animated = false }) {
  const [displayNumber, setDisplayNumber] = useState(0);
  const [displayStrength, setDisplayStrength] = useState(0);

  useEffect(() => {
    if (animated && number) {
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —á–∏—Å–ª–∞
      const duration = 1000;
      const steps = 20;
      const stepDuration = duration / steps;
      
      let currentStep = 0;
      const timer = setInterval(() => {
        currentStep++;
        const progress = currentStep / steps;
        setDisplayNumber(Math.floor(number * progress));
        setDisplayStrength(Math.floor(strength * progress));
        
        if (currentStep >= steps) {
          setDisplayNumber(number);
          setDisplayStrength(Math.round(strength));
          clearInterval(timer);
        }
      }, stepDuration);
      
      return () => clearInterval(timer);
    }
  }, [animated, number, strength]);

  if (!number) return null;

  return (
    <div className={`number-card ${primary ? 'primary' : ''} ${animated ? 'animate' : ''}`}>
      <div className="card-icon">{icon}</div>
      <div className="card-content">
        <h4 className="card-title">{title}</h4>
        <div className="number-display">
          <span className="main-number">{displayNumber}</span>
        </div>
        <div className="strength-bar">
          <div className="strength-track">
            <div 
              className="strength-fill"
              style={{ width: `${displayStrength}%` }}
            />
          </div>
          <span className="strength-text">{displayStrength}%</span>
        </div>
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–ø–∏—Å–∞–Ω–∏—è —á–∏—Å–ª–∞
function NumerologyDescription({ number, type, birthDate }) {
  const descriptions = {
    1: {
      character: '–ü—Ä–∏—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –ª–∏–¥–µ—Ä –∏ –ø–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü. –û–±–ª–∞–¥–∞–µ—Ç–µ —Å–∏–ª—å–Ω–æ–π –≤–æ–ª–µ–π –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º.',
      destiny: '–í–∞—à–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –≤–æ–∑–≥–ª–∞–≤–ª—è—Ç—å –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö, —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –∏–¥—Ç–∏ —Å–≤–æ–∏–º –ø—É—Ç–µ–º.',
      advice: '–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –Ω–µ –±–æ–π—Ç–µ—Å—å –±—ã—Ç—å –ø–µ—Ä–≤—ã–º. –í–∞—à–∞ —Å–º–µ–ª–æ—Å—Ç—å –æ—Ç–∫—Ä–æ–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
      keywords: ['–õ–∏–¥–µ—Ä—Å—Ç–≤–æ', '–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞', '–ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', '–°–º–µ–ª–æ—Å—Ç—å']
    },
    2: {
      character: '–ú–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü –∏ –¥–∏–ø–ª–æ–º–∞—Ç –æ—Ç –ø—Ä–∏—Ä–æ–¥—ã. –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∏ —É–º–µ–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã.',
      destiny: '–í–∞—à –ø—É—Ç—å ‚Äî –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –ª—é–¥–µ–π, —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–∞—Ä–º–æ–Ω–∏—é –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.',
      advice: '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏. –í–∞—à–∞ –º—è–≥–∫–æ—Å—Ç—å ‚Äî —ç—Ç–æ —Å–∏–ª–∞, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å.',
      keywords: ['–î–∏–ø–ª–æ–º–∞—Ç–∏—è', '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–ì–∞—Ä–º–æ–Ω–∏—è']
    },
    3: {
      character: '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –Ω–∞—Ç—É—Ä–∞ —Å –±–æ–≥–∞—Ç—ã–º –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –û–±–ª–∞–¥–∞–µ—Ç–µ –¥–∞—Ä–æ–º –æ–±—â–µ–Ω–∏—è –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è.',
      destiny: '–ü—Ä–∏–∑–≤–∞–Ω—ã –Ω–µ—Å—Ç–∏ –∫—Ä–∞—Å–æ—Ç—É –∏ —Ä–∞–¥–æ—Å—Ç—å –≤ –º–∏—Ä —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é.',
      advice: '–ù–µ —Å–∫—Ä—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ç–∞–ª–∞–Ω—Ç—ã! –í—ã—Ä–∞–∂–∞–π—Ç–µ —Å–µ–±—è —Å–º–µ–ª–æ ‚Äî –º–∏—Ä –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ.',
      keywords: ['–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–û–±—â–µ–Ω–∏–µ', '–û–ø—Ç–∏–º–∏–∑–º', '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ']
    },
    4: {
      character: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫. –¶–µ–Ω–∏—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —É–º–µ–µ—Ç–µ —É–ø–æ—Ä–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å.',
      destiny: '–í–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—á–Ω—ã–µ –æ—Å–Ω–æ–≤—ã –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å –∏–¥–µ–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º —Ç—Ä—É–¥–æ–º.',
      advice: '–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ ‚Äî –≤–∞—à–∏ –∫–æ–∑—ã—Ä–∏. –ú–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ –∏–¥–∏—Ç–µ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º.',
      keywords: ['–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', '–¢—Ä—É–¥–æ–ª—é–±–∏–µ', '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å', '–ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å']
    },
    5: {
      character: '–°–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤–∞—è –¥—É—à–∞ –∏ –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –õ—é–±–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω—ã –∏ –Ω–æ–≤—ã–µ –æ–ø—ã—Ç—ã.',
      destiny: '–í–∞—à –ø—É—Ç—å ‚Äî –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä, –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è.',
      advice: '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Å–µ–±—è —Ä–∞–º–∫–∞–º–∏. –í–∞—à–∞ —Å–≤–æ–±–æ–¥–∞ –∏ –≥–∏–±–∫–æ—Å—Ç—å ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–∏–ª—ã –∏ —Ä–æ—Å—Ç–∞.',
      keywords: ['–°–≤–æ–±–æ–¥–∞', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–ò–∑–º–µ–Ω–µ–Ω–∏—è', '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å']
    },
    6: {
      character: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫. –°–µ–º—å—è –∏ –±–ª–∏–∑–∫–∏–µ –¥–ª—è –≤–∞—Å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ.',
      destiny: '–ü—Ä–∏–∑–≤–∞–Ω—ã –Ω–µ—Å—Ç–∏ –∑–∞–±–æ—Ç—É, —Å–æ–∑–¥–∞–≤–∞—Ç—å —É—é—Ç –∏ –∏—Å—Ü–µ–ª—è—Ç—å –¥—É—à–∏ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö –ª—é–¥–µ–π.',
      advice: '–í–∞—à–∞ –¥–æ–±—Ä–æ—Ç–∞ ‚Äî –≤–µ–ª–∏–∫–∞—è —Å–∏–ª–∞. –ó–∞–±–æ—Ç—å—Ç–µ—Å—å –æ –¥—Ä—É–≥–∏—Ö, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ —Å–µ–±–µ.',
      keywords: ['–ó–∞–±–æ—Ç–∞', '–°–µ–º—å—è', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–ò—Å—Ü–µ–ª–µ–Ω–∏–µ']
    },
    7: {
      character: '–ú—É–¥—Ä–µ—Ü –∏ –º—ã—Å–ª–∏—Ç–µ–ª—å —Å –≥–ª—É–±–æ–∫–æ–π –∏–Ω—Ç—É–∏—Ü–∏–µ–π. –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –ø–æ–∑–Ω–∞–Ω–∏—é –∏—Å—Ç–∏–Ω—ã.',
      destiny: '–í–∞—à –ø—É—Ç—å ‚Äî –ø–æ–∏—Å–∫ –∑–Ω–∞–Ω–∏–π, –¥—É—Ö–æ–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø–æ–º–æ—â—å –¥—Ä—É–≥–∏–º –≤ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ –∂–∏–∑–Ω–∏.',
      advice: '–î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –Ω–µ –±–æ–π—Ç–µ—Å—å —É–µ–¥–∏–Ω–µ–Ω–∏—è. –í —Ç–∏—à–∏–Ω–µ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –º—É–¥—Ä–æ—Å—Ç—å.',
      keywords: ['–ú—É–¥—Ä–æ—Å—Ç—å', '–ò–Ω—Ç—É–∏—Ü–∏—è', '–î—É—Ö–æ–≤–Ω–æ—Å—Ç—å', '–ü–æ–∑–Ω–∞–Ω–∏–µ']
    },
    8: {
      character: '–ê–º–±–∏—Ü–∏–æ–∑–Ω–∞—è –Ω–∞—Ç—É—Ä–∞ —Å —Å–∏–ª—å–Ω—ã–º–∏ –ª–∏–¥–µ—Ä—Å–∫–∏–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏. –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ —É—Å–ø–µ—Ö—É –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏—é.',
      destiny: '–í–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî –¥–æ—Å—Ç–∏–≥–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –ø—Ä–µ—É—Å–ø–µ–≤–∞—Ç—å.',
      advice: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ—é —Å–∏–ª—É –º—É–¥—Ä–æ. –ò—Å—Ç–∏–Ω–Ω—ã–π —É—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ —â–µ–¥—Ä–æ—Å—Ç—å.',
      keywords: ['–ê–º–±–∏—Ü–∏–∏', '–£—Å–ø–µ—Ö', '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ', '–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ']
    },
    9: {
      character: '–ì—É–º–∞–Ω–∏—Å—Ç –∏ –∞–ª—å—Ç—Ä—É–∏—Å—Ç —Å —à–∏—Ä–æ–∫–æ–π –¥—É—à–æ–π. –û–±–ª–∞–¥–∞–µ—Ç–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ–º –∫–æ –≤—Å–µ–º—É –∂–∏–≤–æ–º—É.',
      destiny: '–ü—Ä–∏–∑–≤–∞–Ω—ã —Å–ª—É–∂–∏—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤—É, –¥–µ–ª–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ.',
      advice: '–í–∞—à–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –±—ã—Ç—å —Å–≤–µ—Ç–æ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö. –î–∞—Ä–∏—Ç–µ —Å–≤–æ—é –ª—é–±–æ–≤—å —â–µ–¥—Ä–æ.',
      keywords: ['–ì—É–º–∞–Ω–∏–∑–º', '–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ', '–°–ª—É–∂–µ–Ω–∏–µ', '–ê–ª—å—Ç—Ä—É–∏–∑–º']
    }
  };

  const data = descriptions[number] || descriptions[1];

  return (
    <div className="numerology-description">
      <div className="description-header">
        <h4 className="description-title">
          üîÆ –ê–Ω–∞–ª–∏–∑ —á–∏—Å–ª–∞ {number}
        </h4>
      </div>

      <div className="description-content">
        <div className="description-section">
          <h5 className="section-title">üë§ –•–∞—Ä–∞–∫—Ç–µ—Ä</h5>
          <p className="section-text">{data.character}</p>
        </div>

        <div className="description-section">
          <h5 className="section-title">üåü –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ</h5>
          <p className="section-text">{data.destiny}</p>
        </div>

        <div className="description-section">
          <h5 className="section-title">üí° –°–æ–≤–µ—Ç –≥–Ω–æ–º–∞-–º—É–¥—Ä–µ—Ü–∞</h5>
          <p className="section-text advice-text">{data.advice}</p>
        </div>

        <div className="keywords-section">
          <h5 className="section-title">üè∑Ô∏è –ö–ª—é—á–µ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞</h5>
          <div className="keywords-tags">
            {data.keywords.map((keyword, index) => (
              <span key={index} className="keyword-tag">
                {keyword}
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export default NumerologyView;
