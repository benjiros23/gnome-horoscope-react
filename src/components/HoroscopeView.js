import React, { useState, useEffect } from 'react';
import useAPI from '../hooks/useAPI';
import GlassCard from './GlassCard';
import WoodenCard from './WoodenCard';

const HoroscopeView = ({ selectedSign, onSignSelect, onAddToFavorites, telegramApp }) => {
  const [horoscopeData, setHoroscopeData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [designTheme] = useState('glass'); // –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –ø—Ä–æ–ø—Å–æ–≤ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useAPI
  const api = useAPI();

  const loadHoroscope = async (sign) => {
    if (!sign) return;
    
    setLoading(true);
    setError(null);
    
    try {
      console.log('üîÆ –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞:', sign);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑ —Ö—É–∫–∞
      const data = await api.getHoroscope(sign);
      
      console.log('‚úÖ –ì–æ—Ä–æ—Å–∫–æ–ø –ø–æ–ª—É—á–µ–Ω:', data);
      setHoroscopeData(data);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
      try {
        localStorage.setItem(`horoscope_${sign}`, JSON.stringify({
          data,
          timestamp: Date.now()
        }));
      } catch (cacheError) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à:', cacheError);
      }
      
    } catch (fetchError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:', fetchError);
      setError(fetchError.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∫–µ—à–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      try {
        const cached = localStorage.getItem(`horoscope_${sign}`);
        if (cached) {
          const { data } = JSON.parse(cached);
          setHoroscopeData(data);
          setError('–ü–æ–∫–∞–∑–∞–Ω –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø (–Ω–µ—Ç —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º)');
          console.log('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –∫–µ—à–∞:', data);
        }
      } catch (cacheError) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∫–µ—à–∞:', cacheError);
      }
      
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîÆ HoroscopeView —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, selectedSign:', selectedSign);
    
    if (selectedSign) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à —Å–Ω–∞—á–∞–ª–∞
      try {
        const cached = localStorage.getItem(`horoscope_${selectedSign}`);
        if (cached) {
          const { data, timestamp } = JSON.parse(cached);
          const isExpired = Date.now() - timestamp > 3600000; // 1 —á–∞—Å
          
          if (!isExpired) {
            console.log('‚úÖ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è', selectedSign, '–∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –∫–µ—à–∞');
            setHoroscopeData(data);
            return;
          }
        }
      } catch (cacheError) {
        console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–µ—à–∞:', cacheError);
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –Ω–µ—Ç –≤ –∫–µ—à–µ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª
      setTimeout(() => {
        console.log('üîÆ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è', selectedSign);
        loadHoroscope(selectedSign);
      }, 300);
    }
  }, [selectedSign]);

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
  const handleRefresh = () => {
    if (selectedSign) {
      // –û—á–∏—â–∞–µ–º –∫–µ—à
      try {
        localStorage.removeItem(`horoscope_${selectedSign}`);
      } catch (e) {}
      
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞...');
      loadHoroscope(selectedSign);
    }
  };

  const handleAddToFavorites = () => {
    if (horoscopeData && onAddToFavorites) {
      const favoriteItem = {
        type: 'horoscope',
        title: `–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${horoscopeData.sign}`,
        content: horoscopeData.horoscope.general,
        date: horoscopeData.date,
        sign: horoscopeData.sign,
        gnome: horoscopeData.gnome
      };
      
      onAddToFavorites(favoriteItem);
      
      // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π haptic feedback
      try {
        if (telegramApp && parseFloat(telegramApp.version) >= 6.1 && telegramApp.HapticFeedback) {
          telegramApp.HapticFeedback.notificationOccurred('success');
        }
      } catch (e) {}
    }
  };

  // –í—ã–±–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
  const Card = designTheme === 'wooden' ? WoodenCard : GlassCard;

  const styles = {
    container: {
      padding: '20px',
      maxWidth: '600px',
      margin: '0 auto'
    },
    loadingSpinner: {
      textAlign: 'center',
      padding: '40px',
      fontSize: '24px'
    },
    errorMessage: {
      color: '#dc3545',
      textAlign: 'center',
      padding: '20px',
      backgroundColor: 'rgba(220, 53, 69, 0.1)',
      borderRadius: '8px',
      margin: '20px 0'
    },
    refreshButton: {
      background: 'linear-gradient(135deg, #28a745, #20c997)',
      color: 'white',
      border: 'none',
      borderRadius: '12px',
      padding: '12px 24px',
      fontSize: '16px',
      fontWeight: '600',
      cursor: 'pointer',
      margin: '10px 5px',
      transition: 'all 0.3s ease',
      boxShadow: '0 4px 12px rgba(40, 167, 69, 0.3)'
    },
    favoriteButton: {
      background: 'linear-gradient(135deg, #ffc107, #fd7e14)',
      color: 'white',
      border: 'none',
      borderRadius: '12px',
      padding: '12px 24px',
      fontSize: '16px',
      fontWeight: '600',
      cursor: 'pointer',
      margin: '10px 5px',
      transition: 'all 0.3s ease',
      boxShadow: '0 4px 12px rgba(255, 193, 7, 0.3)'
    },
    horoscopeSection: {
      marginBottom: '20px',
      padding: '16px',
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
      borderRadius: '12px',
      backdropFilter: 'blur(8px)'
    },
    sectionTitle: {
      fontSize: '18px',
      fontWeight: '700',
      marginBottom: '8px',
      color: '#2d3748'
    },
    sectionText: {
      fontSize: '16px',
      lineHeight: '1.5',
      color: '#4a5568'
    },
    metaInfo: {
      display: 'flex',
      justifyContent: 'space-between',
      flexWrap: 'wrap',
      gap: '10px',
      marginTop: '20px'
    },
    metaItem: {
      backgroundColor: 'rgba(139, 195, 74, 0.2)',
      color: '#2e7d0f',
      padding: '6px 12px',
      borderRadius: '16px',
      fontSize: '14px',
      fontWeight: '600',
      border: '1px solid rgba(139, 195, 74, 0.3)'
    }
  };

  console.log('üé® HoroscopeView: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥, —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', { 
    loading, 
    error: !!error, 
    horoscopeData: !!horoscopeData,
    selectedSign 
  });

  return (
    <div style={styles.container}>
      <Card 
        title={`üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ ${selectedSign}`}
        subtitle={horoscopeData ? `–æ—Ç ${horoscopeData.gnome}` : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
      >
        {loading && (
          <div style={styles.loadingSpinner}>
            ‚è≥ –ó–≤–µ–∑–¥—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤–∞—à –≥–æ—Ä–æ—Å–∫–æ–ø...
          </div>
        )}

        {error && (
          <div style={styles.errorMessage}>
            ‚ùå {error}
          </div>
        )}

        {horoscopeData && !loading && (
          <div>
            {/* –û–±—â–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø */}
            <div style={styles.horoscopeSection}>
              <div style={styles.sectionTitle}>‚ú® –û–±—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑</div>
              <div style={styles.sectionText}>
                {horoscopeData.horoscope.general}
              </div>
            </div>

            {/* –õ—é–±–æ–≤—å */}
            <div style={styles.horoscopeSection}>
              <div style={styles.sectionTitle}>üíù –õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è</div>
              <div style={styles.sectionText}>
                {horoscopeData.horoscope.love}
              </div>
            </div>

            {/* –†–∞–±–æ—Ç–∞ */}
            <div style={styles.horoscopeSection}>
              <div style={styles.sectionTitle}>üíº –ö–∞—Ä—å–µ—Ä–∞ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã</div>
              <div style={styles.sectionText}>
                {horoscopeData.horoscope.work}
              </div>
            </div>

            {/* –ó–¥–æ—Ä–æ–≤—å–µ */}
            <div style={styles.horoscopeSection}>
              <div style={styles.sectionTitle}>üèÉ‚Äç‚ôÇÔ∏è –ó–¥–æ—Ä–æ–≤—å–µ</div>
              <div style={styles.sectionText}>
                {horoscopeData.horoscope.health}
              </div>
            </div>

            {/* –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div style={styles.metaInfo}>
              <span style={styles.metaItem}>
                üçÄ –°—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ: {horoscopeData.luckyNumber}
              </span>
              <span style={styles.metaItem}>
                üé® –¶–≤–µ—Ç: {horoscopeData.luckyColor}
              </span>
              <span style={styles.metaItem}>
                üåü –≠–ª–µ–º–µ–Ω—Ç: {horoscopeData.element}
              </span>
              <span style={styles.metaItem}>
                üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: {horoscopeData.compatibility}
              </span>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div style={{ textAlign: 'center', marginTop: '20px' }}>
              <button 
                style={styles.refreshButton}
                onClick={handleRefresh}
                disabled={loading}
                onMouseEnter={(e) => {
                  if (!loading) {
                    e.target.style.transform = 'translateY(-2px)';
                    e.target.style.boxShadow = '0 6px 16px rgba(40, 167, 69, 0.4)';
                  }
                }}
                onMouseLeave={(e) => {
                  if (!loading) {
                    e.target.style.transform = 'translateY(0)';
                    e.target.style.boxShadow = '0 4px 12px rgba(40, 167, 69, 0.3)';
                  }
                }}
              >
                üîÑ –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø
              </button>
              
              <button 
                style={styles.favoriteButton}
                onClick={handleAddToFavorites}
                onMouseEnter={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 6px 16px rgba(255, 193, 7, 0.4)';
                }}
                onMouseLeave={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 12px rgba(255, 193, 7, 0.3)';
                }}
              >
                ‚≠ê –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
              </button>
            </div>
          </div>
        )}

        {!horoscopeData && !loading && !error && (
          <div style={{ textAlign: 'center', padding: '40px' }}>
            <div style={{ fontSize: '48px', marginBottom: '16px' }}>üîÆ</div>
            <h4>–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞</h4>
            <p>–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.</p>
          </div>
        )}
      </Card>
    </div>
  );
};

export default HoroscopeView;
