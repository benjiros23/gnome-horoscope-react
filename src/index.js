import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

// –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç React
const root = ReactDOM.createRoot(document.getElementById('root'));

// –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker - —É–±–∏—Ä–∞–µ–º InvalidStateError
function cleanupAndRegisterSW() {
  if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ Service Workers
    navigator.serviceWorker.getRegistrations().then(registrations => {
      const unregisterPromises = registrations.map(registration => 
        registration.unregister()
      );
      
      return Promise.all(unregisterPromises);
    }).then(() => {
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö
      return navigator.serviceWorker.register('/sw.js');
    }).then(registration => {
      console.log('‚úÖ Service Worker —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration.scope);
    }).catch(error => {
      console.log('‚ùå Service Worker –æ—à–∏–±–∫–∞ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è):', error.message);
    });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é SW –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
window.addEventListener('load', cleanupAndRegisterSW);

console.log('üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø –∑–∞–ø—É—â–µ–Ω!');
console.log('üì± –†–µ–∂–∏–º:', process.env.NODE_ENV || 'development');
