// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π TTL (–≤—Ä–µ–º—è –∂–∏–∑–Ω–∏)
// –°–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º + –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

const CACHE_PREFIX = 'gnome_cache_';

// ===== –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) =====

export function saveToCache(key, data) {
  try {
    const item = {
      data,
      timestamp: Date.now(),
    };
    localStorage.setItem(`${CACHE_PREFIX}${key}`, JSON.stringify(item));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–µ—à:', error);
  }
}

export function loadFromCache(key) {
  try {
    const item = localStorage.getItem(`${CACHE_PREFIX}${key}`);
    if (!item) return null;
    
    const { data, timestamp } = JSON.parse(item);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ –∫–µ—à (24 —á–∞—Å–∞)
    const isExpired = Date.now() - timestamp > 24 * 60 * 60 * 1000;
    if (isExpired) {
      localStorage.removeItem(`${CACHE_PREFIX}${key}`);
      return null;
    }
    
    return data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∫–µ—à–∞:', error);
    return null;
  }
}

export function clearCache(key) {
  try {
    localStorage.removeItem(`${CACHE_PREFIX}${key}`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞:', error);
  }
}

// ===== –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –° TTL =====

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∂–∏–∑–Ω–∏
export function saveWithTTL(key, data, ttlMinutes = 360) {
  try {
    const item = {
      data,
      timestamp: Date.now(),
      ttl: ttlMinutes * 60 * 1000,
      expiresAt: Date.now() + (ttlMinutes * 60 * 1000)
    };
    localStorage.setItem(`${CACHE_PREFIX}${key}`, JSON.stringify(item));
    
    console.log(`üíæ –ö–µ—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${key} (TTL: ${ttlMinutes} –º–∏–Ω)`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–µ—à —Å TTL:', error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π TTL
export function loadWithTTL(key) {
  try {
    const item = localStorage.getItem(`${CACHE_PREFIX}${key}`);
    if (!item) {
      console.log(`üì≠ –ö–µ—à –ø—É—Å—Ç: ${key}`);
      return null;
    }
    
    const parsedItem = JSON.parse(item);
    const { data, timestamp, ttl, expiresAt } = parsedItem;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏
    const now = Date.now();
    const expired = expiresAt ? now > expiresAt : (now - timestamp > ttl);
    
    if (expired) {
      console.log(`‚è∞ –ö–µ—à –∏—Å—Ç–µ–∫: ${key}`);
      localStorage.removeItem(`${CACHE_PREFIX}${key}`);
      return null;
    }
    
    const remainingMinutes = Math.round((expiresAt - now) / (1000 * 60));
    console.log(`üì¶ –ö–µ—à –∑–∞–≥—Ä—É–∂–µ–Ω: ${key} (–æ—Å—Ç–∞–ª–æ—Å—å ${remainingMinutes} –º–∏–Ω)`);
    
    return data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∫–µ—à–∞ —Å TTL:', error);
    return null;
  }
}

// ===== –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–°–¢–†–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• =====

// –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (6 —á–∞—Å–æ–≤)
export function saveMoonData(date, data) {
  const dateKey = date.toISOString().split('T')[0];
  const key = `moon_${dateKey}`;
  saveWithTTL(key, data, 360); // 6 —á–∞—Å–æ–≤
}

export function loadMoonData(date) {
  const dateKey = date.toISOString().split('T')[0];
  const key = `moon_${dateKey}`;
  return loadWithTTL(key);
}

// –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ (24 —á–∞—Å–∞)
export function saveHoroscope(zodiacSign, data) {
  const today = new Date().toISOString().split('T')[0];
  const key = `horoscope_${zodiacSign}_${today}`;
  saveWithTTL(key, data, 1440); // 24 —á–∞—Å–∞
}

export function loadHoroscope(zodiacSign) {
  const today = new Date().toISOString().split('T')[0];
  const key = `horoscope_${zodiacSign}_${today}`;
  return loadWithTTL(key);
}

// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞
export function getCacheStats() {
  try {
    const keys = Object.keys(localStorage).filter(key => key.startsWith(CACHE_PREFIX));
    let totalSize = 0;
    let activeItems = 0;
    let expiredItems = 0;
    
    keys.forEach(key => {
      const item = localStorage.getItem(key);
      totalSize += item.length;
      
      try {
        const { expiresAt, timestamp, ttl } = JSON.parse(item);
        const now = Date.now();
        const expired = expiresAt ? now > expiresAt : (now - timestamp > (ttl || 24 * 60 * 60 * 1000));
        
        if (expired) {
          expiredItems++;
        } else {
          activeItems++;
        }
      } catch (e) {
        activeItems++;
      }
    });
    
    return {
      totalKeys: keys.length,
      activeItems,
      expiredItems,
      totalSizeKB: Math.round(totalSize / 1024),
      cacheKeys: keys.map(key => key.replace(CACHE_PREFIX, ''))
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–µ—à–∞:', error);
    return null;
  }
}

// –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
export function cleanExpiredCache() {
  try {
    const keys = Object.keys(localStorage).filter(key => key.startsWith(CACHE_PREFIX));
    let cleaned = 0;
    
    keys.forEach(key => {
      const item = localStorage.getItem(key);
      try {
        const { expiresAt, timestamp, ttl } = JSON.parse(item);
        const now = Date.now();
        const expired = expiresAt ? now > expiresAt : (now - timestamp > (ttl || 24 * 60 * 60 * 1000));
        
        if (expired) {
          localStorage.removeItem(key);
          cleaned++;
        }
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø–∞—Ä—Å–∏—Ç—å, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
      }
    });
    
    console.log(`üßπ –û—á–∏—â–µ–Ω–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${cleaned}`);
    return cleaned;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–≥–æ –∫–µ—à–∞:', error);
    return 0;
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
const initCacheCleanup = () => {
  cleanExpiredCache();
  
  if (typeof window !== 'undefined') {
    setInterval(() => {
      cleanExpiredCache();
    }, 60 * 60 * 1000); // –∫–∞–∂–¥—ã–π —á–∞—Å
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏
if (typeof window !== 'undefined') {
  setTimeout(initCacheCleanup, 1000);
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤ window –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ development)
if (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {
  window.cacheDebug = {
    stats: getCacheStats,
    clean: cleanExpiredCache,
    saveMoon: saveMoonData,
    loadMoon: loadMoonData
  };
  
  console.log('üîß Cache debug tools –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.cacheDebug');
}

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default {
  saveToCache,
  loadFromCache,
  clearCache,
  saveWithTTL,
  loadWithTTL,
  saveMoonData,
  loadMoonData,
  saveHoroscope,
  loadHoroscope,
  getCacheStats,
  cleanExpiredCache
};
